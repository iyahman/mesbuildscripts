#!/bin/bash


#****************************************************************
## Script command exemple :
#iyah $1 || iyah $1 $2
#iyah s1 || iyah s1 linaro
#iyah s2 || iyah s2 linaro
#iyah s4 || iyah s4 linaro

#****************************************************************
## Start Timer :
START=$(date +%s)

#****************************************************************
## Start Total Timer :
DATE_START=$(date +"%s")

#****************************************************************
## Set Basic Parameters :

set -xv

case "$1" in
        s1)
            VARIANT="galaxysmtd"
            VER="s1"
            ;;

        s2)
            VARIANT="i9100"
            VER="s2"
            ;;
            
        s4)
            VARIANT="jflte"
            VER="s4"
            ;;
esac

if [ "$2" = "linaro" ] ; then
TOOLCHAIN="-linaro"
fi

if [ "$3" = "force" ] ; then
FORCETOOLCHAIN="on"
fi


function timer {
    END=$(date +%s)
    ELAPSED=$((END - START))
    E_MIN=$((ELAPSED / 60))
    E_SEC=$((ELAPSED - E_MIN * 60))
    echo && printf "${txtgrn}ELAPSED: "
    printf "%d min(s) " $E_MIN
    printf "%d sec(s)\n ${txtrst}" $E_SEC && echo
}

CMVER='11.0'
ROMNAME="IyahmanRom"
CMROMNAME=cm-11-`date -u +%Y%m%d`-UNOFFICIAL-$VARIANT

#****************************************************************
## Script speech:
echo -e "\e[31;42m 'HELLO IYAHMAN' \e[0m"
echo -e "\e[31;42m  LAUNCH $ROMNAME$CMVER$TOOLCHAIN BUILD SCRIPT V4.1 FOR $VARIANT WITH GAPPS, CUSTOM APK,'HOST AND GPS CONF' \e[0m"
sleep 2s

#****************************************************************
## Variant selection verification:
if [ "$VARIANT" != "galaxysmtd" ] && [ "$VARIANT" != "i9100" ] && [ "$VARIANT" != "jflte" ]
then spd-say 'bug' && echo -e "\e[31;42m  '############################################################################################################################'
echo '###################################################### PAS DE VARIANTE SELECTIONNÃ‰E POUR $ROMNAME$CMVER ######################################################' 
echo '############################################################################################################################' \e[0m" && read && exit
else echo -n
fi

#****************************************************************
## Open ccache and cpu monitor:
#cache
#gnome-system-monitor

#****************************************************************
##Update android SDK:
#android list sdk
#android update sdk --no-ui

#****************************************************************
##Installclean : Wipe out the stuff that changes from one make target to another.
if echo -e "\e[31;42m 'INSTALLCLEAN' \e[0m" &&
cd ~/android/rom/iyahmanrom$CMVER/ &&
make installclean 
then timer && echo -e "\e[31;42m 'INSTALLCLEAN DONE' \e[0m"
else echo -e "\e[31;42m 'INSTALLCLEAN FAILED' \e[0m" && read
fi

#****************************************************************
##Make Clobber : deletes all the object files AND the intermediate dependency files generated which specify the dependencies of the cpp files.
#if echo -e "\e[31;42m 'MAKE CLOBBER' \e[0m" &&
#cd ~/android/rom/iyahmanrom$CMVER/ && make clobber &&
#echo -e "\e[31;42m 'MAKE CLOBBER DONE' \e[0m" &&
#. build/envsetup.sh && breakfast $VARIANT &&
#adb root && sleep 3s &&
#cd ~/android/rom/iyahmanrom$CMVER/device/samsung/$VARIANT/ &&
#./extract-files.sh && 
##cp -rfavu ~/android/extractedfiles/$VARIANT ~/android/rom/iyahmanrom$CMVER/device/samsung
#~/android/rom/iyahmanrom$CMVER/vendor/cm/get-prebuilts
#then echo -e "\e[31;42m 'REINSTALL AFTER CLOBBER DONE' \e[0m"
#else echo -e "\e[31;42m 'REINSTALL AFTER CLOBBER FAILED' \e[0m" && read
#fi

#****************************************************************
## Save extracted files :
#if echo -e "\e[31;42m 'SAVE EXTRACTED FILES' \e[0m" &&
#adb root &&
#mkdir ~/android/extractedfiles/$VARIANT &&
#cd ~/android/extractedfiles/$VARIANT/ &&
#sleep 3s &&
#./extract-files.sh
#then echo -e "\e[31;42m 'SAVE EXTRACTED FILES DONE' \e[0m"
#else echo -e "\e[31;42m 'SAVE EXTRACTED FILES FAILED' \e[0m" && read
#fi

#****************************************************************
##Remove Previous Kernel Build :
if [ "$VARIANT" = "galaxysmtd" ] ; then
  if echo -e "\e[31;42m 'REMOVING PREVIOUS BUILD IN semaphore/output/' \e[0m" &&
  cd ~/android/rom/semaphore/11.0/output/galaxys &&
  cp -rfavu IyahmanKernels.zip IyahmanKernelsOld.zip &&
  cp -rfavu IyahmanKernels.tar IyahmanKernelsOld.tar &&
  rm -rfv IyahmanKernels.zip &&
  rm -rfv IyahmanKernels.tar
  then echo -e "\e[31;42m 'REMOVING PREVIOUS BUILD IN semaphore/output/  DONE' \e[0m"
  else echo -e "\e[31;42m 'REMOVING PREVIOUS BUILD IN semaphore/output/  FAILED' \e[0m" && read
  fi
fi

#****************************************************************
## Clean buildtemporaire:
if echo -e "\e[31;42m 'CLEANING TEMPORALY FILE' \e[0m" &&
cd ~/android/rom/buildtemporaire &&
rm -rfv $ROMNAME$CMVER'Extract' &&
rm -rfv gapps11.0Extract &&
rm -rfv gapps11.0.zip &&
rm -rfv bootanimationExtract &&
rm -rfv bootanimation.zip
then echo -e "\e[31;42m 'CLEANING TEMPORALY FILE DONE' \e[0m"
  if [ "$VARIANT" = "galaxysmtd" ] ; then
    if echo -e "\e[31;42m 'CLEANING GALAXYSMTD TEMPORALY FILE' \e[0m" &&
    rm -rfv IyahmanKernelExtract &&
    rm -rfv IyahmanKernels.zip &&
    rm -rfv modemril.zip &&
    rm -rfv modemrilExtract &&
    rm -rfv patch720p4.4Extract &&
    rm -rfv patch720p4.4.zip
    then echo -e "\e[31;42m 'CLEANING GALAXYSMTD TEMPORALY FILE DONE' \e[0m"
    else echo -e "\e[31;42m 'CLEANING GALAXYSMTD TEMPORALY FILE FAILED' \e[0m" && read
    fi
  fi
else echo -e "\e[31;42m 'CLEANING TEMPORALY FILE FAILED' \e[0m" && read
fi

#****************************************************************
##Synchronization :
if echo -e "\e[31;42m 'SYNCHRONIZATION' \e[0m" &&
cd ~/android/rom/iyahmanrom$CMVER/ &&
#curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo &&
#chmod a+x ~/bin/repo &&
#repo init -u git://github.com/CyanogenMod/android.git -b cm-$CMVER &&
#echo -e "\e[31;42m 'repo init -u git://github.com/CyanogenMod/android.git -b cm-$CMVER done' &&
repo selfupdate && repo sync -j16
then timer && echo -e "\e[31;42m 'REPO SYNC -j16 DONE ON  git://github.com/CyanogenMod/android.git -b cm-$CMVER' \e[0m"
else 
  if echo -e "\e[31;42m 'REPO SYNC -j16 FAILED ON  git://github.com/CyanogenMod/android.git -b cm-$CMVER' \e[0m" &&
  repo selfupdate && repo sync -j4
  then timer && echo -e "\e[31;42m 'REPO SYNC -j4 DONE THIS TIME ON  git://github.com/CyanogenMod/android.git -b cm-$CMVER' \e[0m"
  else echo -e "\e[31;42m 'REPO SYNC -j4 FAILED THIS TIME AGAIN ON  git://github.com/CyanogenMod/android.git -b cm-$CMVER' \e[0m" && read
  fi
fi

#****************************************************************
##Save Gcc:
if [ "$TOOLCHAIN" = "linaro" ] && [ "$FORCETOOLCHAIN" = "on" ] ; then
  if echo -e "\e[31;42m 'SAVE CYANOGENMOD TOOLCHAIN' \e[0m" &&
  cp -rfavu ~/android/rom/iyahmanrom$CMVER/prebuilts/gcc/linux-x86/arm/* ~/android/cyanogengcc$CMVER
  then echo -e "\e[31;42m 'SAVE CYANOGENMOD TOOLCHAIN DONE' \e[0m"
  else echo -e "\e[31;42m 'SAVE CYANOGENMOD TOOLCHAIN FAILED' \e[0m" && read
  fi
fi

#****************************************************************
##Use Gcc Linaro 4.8: put linaro 4.8 on cyanogen prebuilts
if [ "$TOOLCHAIN" = "linaro" ] && [ "$FORCETOOLCHAIN" = "on" ] ; then
  if echo -e "\e[31;42m 'REPLACE CYANOGENMOD TOOLCHAIN BY LINARO TOOLCHAIN' \e[0m" &&
  cd ~/android/linaro/gcc-linaro &&
  bunzip2 *.tar.bz2 &&
  tar -xvf *.tar &&
  rm -rfv *.tar &&
  #rm -rfv ~/android/rom/iyahmanrom$CMVER/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6/* &&
  rm -rfv ~/android/rom/iyahmanrom$CMVER/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/* && 
  cp -rfavu ~/android/linaro/gcc-linaro/android-toolchain-eabi/* ~/android/rom/iyahmanrom$CMVER/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6
  #cp -rfavu ~/android/linaro/gcc-linaro/android-toolchain-eabi/* ~/android/rom/iyahmanrom$CMVER/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6
  #rm -rfv ~/android/rom/iyahmanrom$CMVER/prebuilts/gcc/linux-x86/arm/*
  then echo -e "\e[31;42m 'REPLACE CYANOGENMOD TOOLCHAIN BY LINARO TOOLCHAIN DONE' \e[0m"
  else echo -e "\e[31;42m 'REPLACE CYANOGENMOD TOOLCHAIN BY LINARO TOOLCHAIN FAILED' \e[0m" && read
  fi
fi

#****************************************************************
##Add Cherry Pick :

#****************************************************************
##replace original system syze by Iyah 
#if [ "$VARIANT" = "galaxysmtd" ] ; then
  #if echo -e "\e[31;42m 'CHANGE SYSTEM SIZE' \e[0m" &&
  #cd ~/android/rom/iyahmanrom$CMVER/device/samsung/aries-common &&
  #sed -i 's/629145600/304087040/g' updater.sh
  #then echo -e "\e[31;42m 'CHANGE SYSTEM SIZE FOR GALAXYSMTD DONE' \e[0m"
  #else echo -e "\e[31;42m 'CHANGE SYSTEM SIZE FOR GALAXYSMTD FAILED' \e[0m" && read
  #fi
#fi

#****************************************************************
##Build CM10 :
if echo -e "\e[31;42m 'BUILD CM$CMVER ROM' \e[0m" &&
cd ~/android/rom/iyahmanrom$CMVER/ &&
. build/envsetup.sh && breakfast $VARIANT && export USE_CCACHE=1
then
  if [ "$TOOLCHAIN" = "linaro" ] && [ "$VARIANT" = "galaxysmtd" ] ; then
      if echo -e "\e[31;42m 'SET LINARO TOOLCHAIN FOR $VARIANT CYANOGEN KERNEL'  \e[0m" &&
      cd ~/android/rom/iyahmanrom$CMVER/kernel/samsung/aries &&
      make mrproper && export ARCH=arm &&
      export CROSS_COMPILE=~/android/linaro/linaro-toolchain$VER/bin/arm-cortex_a8-linux-gnueabi-
      then echo -e "\e[31;42m 'SET LINARO TOOLCHAIN FOR $VARIANT CYANOGEN KERNEL DONE'  \e[0m"
      else echo -e "\e[31;42m 'SET LINARO TOOLCHAIN FOR $VARIANT CYANOGEN KERNEL FAILED'  \e[0m" && read
      fi
  elif [ "$TOOLCHAIN" = "linaro" ] && [ "$VARIANT" = "i9100" ] ; then
      if echo -e "\e[31;42m 'SET LINARO TOOLCHAIN FOR $VARIANT CYANOGEN KERNEL'  \e[0m" &&
      cd ~/android/rom/iyahmanrom$CMVER/kernel/samsung/smdk4412 &&
      make mrproper && export ARCH=arm &&
      export CROSS_COMPILE=~/android/linaro/linaro-toolchain$VER/bin/arm-cortex_a9-linux-gnueabi-
      then echo -e "\e[31;42m 'SET LINARO TOOLCHAIN FOR $VARIANT CYANOGEN KERNEL DONE'  \e[0m"
      else echo -e "\e[31;42m 'SET LINARO TOOLCHAIN FOR $VARIANT CYANOGEN KERNEL FAILED'  \e[0m" && read
      fi
  elif [ "$TOOLCHAIN" = "linaro" ] && [ "$VARIANT" = "jflte" ] ; then 
      if echo -e "\e[31;42m 'SET LINARO TOOLCHAIN FOR $VARIANT CYANOGEN KERNEL'  \e[0m" &&
      cd ~/android/rom/iyahmanrom$CMVER/kernel/samsung/jf &&
      make mrproper && export ARCH=arm &&
      export CROSS_COMPILE=~/android/linaro/linaro-toolchains$VER/bin/arm-cortex_a15-linux-gnueabi-
      then echo -e "\e[31;42m 'SET LINARO TOOLCHAIN FOR $VARIANT CYANOGEN KERNEL DONE'  \e[0m"
      else echo -e "\e[31;42m 'SET LINARO TOOLCHAIN FOR $VARIANT CYANOGEN KERNEL FAILED'  \e[0m" && read
      fi
  fi
fi
if mka bacon ; then
timer && echo -e "\e[31;42m 'BUILD CM$CMVER ROM DONE' \e[0m"
else echo -e "\e[31;42m 'BUILD CM$CMVER ROM FAILED' \e[0m" && read
fi

#****************************************************************
##clean after linaro build:
if [ "$TOOLCHAIN" = "linaro" ] ; then
echo -e "\e[31;42m 'CLEAN KERNEL DIRECTORY AFTER LINARO BUILD'  \e[0m"
  if [ "$VARIANT" = "galaxysmtd" ] ; then
    if cd ~/android/rom/iyahmanrom$CMVER/kernel/samsung/aries && make mrproper
    then echo -e "\e[31;42m 'CLEAN $VARIANT KERNEL DIRECTORY AFTER LINARO BUILD DONE'  \e[0m"
    else echo -e "\e[31;42m 'CLEAN $VARIANT KERNEL DIRECTORY AFTER LINARO BUILD FAILED'  \e[0m" && read
    fi
  fi
  if [ "$VARIANT" = "i9100" ] ; then
    if cd ~/android/rom/iyahmanrom$CMVER/kernel/samsung/smdk4412 && make mrproper
    then echo -e "\e[31;42m 'CLEAN $VARIANT KERNEL DIRECTORY AFTER LINARO BUILD DONE'  \e[0m"
    else echo -e "\e[31;42m 'CLEAN $VARIANT KERNEL DIRECTORY AFTER LINARO BUILD FAILED'  \e[0m" && read
    fi
  fi
  if [ "$VARIANT" = "jflte" ] ; then 
    if cd ~/android/rom/iyahmanrom$CMVER/kernel/samsung/jf && make mrproper
    then echo -e "\e[31;42m 'CLEAN $VARIANT KERNEL DIRECTORY AFTER LINARO BUILD DONE'  \e[0m"
    else echo -e "\e[31;42m 'CLEAN $VARIANT KERNEL DIRECTORY AFTER LINARO BUILD FAILED'  \e[0m" && read
    fi
  fi
echo -e "\e[31;42m 'CLEAN KERNEL DIRECTORY AFTER LINARO BUILD DONE'  \e[0m"
fi

#****************************************************************
##Reinstall Gcc cyanogen:
if [ "$TOOLCHAIN" = "linaro" ] && [ "$FORCETOOLCHAIN" = "on" ] ; then
  if  echo -e "\e[31;42m 'REINSTALL CYANOGEN GCC' \e[0m" &&
  rm -rv ~/android/rom/iyahmanrom$CMVER/prebuilts/gcc/linux-x86/arm/* &&
  cp -rfavu ~/android/cyanogengcc$CMVER/* ~/android/rom/iyahmanrom$CMVER/prebuilts/gcc/linux-x86/arm/
  then echo -e "\e[31;42m 'REINSTALL CYANOGEN GCC DONE' \e[0m"
  else echo -e "\e[31;42m 'REINSTALL CYANOGEN GCC FAILED' \e[0m" && read
  fi
fi

#****************************************************************
##Build Semaphore :
if [ "$VARIANT" = "galaxysmtd" ] ; then
   if echo  -e "\e[31;42m'BUILD IYAHMANKERNEL' \e[0m" &&
   cd ~/android/rom/semaphore/11.0/samsung-kernel-aries &&
  #cp -rfavu /home/iyahman/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/recovery/root/sbin/recovery /home/iyahman/android/rom/semaphore/ics-ramdisk/jb_combo/ics_rec_init/sbin/
  export USE_CCACHE=1 && ./sbuild.sh galaxys s
  then timer && echo -e "\e[31;42m 'BUILD IYAHMANKERNEL DONE' \e[0m"
  else echo -e "\e[31;42m 'BUILD IYAHMANKERNEL FAILED' \e[0m" && read
  fi
fi

#****************************************************************
## Save Unofficial Nightly :
if echo -e "\e[31;42m 'SAVE UNOFFICIAL NIGHTLY' \e[0m" &&
cd ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/ &&
cp -rfavu $CMROMNAME.zip  $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`.zip
then echo -e "\e[31;42m 'SAVE UNOFFICIAL NIGHTLY DONE' \e[0m"
else echo -e "\e[31;42m 'SAVE UNOFFICIAL NIGHTLY FAILED' \e[0m" && read
fi

#****************************************************************
## Move Rom And Extra Feature Into Temporaly Folder :
if echo -e "\e[31;42m 'MOVING ROM, GAPPS INTO TEMPORALY FOLDER' \e[0m" &&
cd ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/ &&
mv -fv $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`.zip ~/android/rom/buildtemporaire &&
cd /home/iyahman/Bureau/ &&
cp -rfavu gapps11.0.zip ~/android/rom/buildtemporaire &&
cp -rfavu bootanimation.zip ~/android/rom/buildtemporaire
then echo -e "\e[31;42m 'MOVING ROM, GAPP INTO TEMPORALY FOLDER DONE' \e[0m"
  if [ "$VARIANT" = "galaxysmtd" ] ; then
    if cd /home/iyahman/Bureau/ &&
    cp -rfavu patch720p4.4.zip ~/android/rom/buildtemporaire &&
    cp -rfavu modemril.zip ~/android/rom/buildtemporaire &&
    cd /home/iyahman/android/rom/semaphore/11.0/output/galaxys&&
    cp -rfavu IyahmanKernels.zip ~/android/rom/buildtemporaire
    then echo -e "\e[31;42m 'MOVING KERNEL AND RIL INTO TEMPORALY FOLDER DONE' \e[0m"
    else echo -e "\e[31;42m 'MOVING KERNEL AND RIL INTO TEMPORALY FOLDER FAILED' \e[0m" && read
    fi
  fi
else echo -e "\e[31;42m 'MOVING ROM, GAPPS INTO TEMPORALY FOLDER FAILED' \e[0m" && read
fi

#****************************************************************
## unzip Rom And Extra Feature Into Respective Temporaly Folder :
if echo -e "\e[31;42m 'UNZIPPING ROM, GAPPS INTO TEMPORALY FOLDER' \e[0m" &&
cd ~/android/rom/buildtemporaire/ && 
unzip -q $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I` -d $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract &&
echo 'unzip -q cm-$ROMNAME$CMVER-$VARIANT -d $ROMNAME$CMVER-$VARIANTExtract done' &&
unzip -q gapps11.0 -d gapps11.0Extract
#unzip -q bootanimation -d bootanimationExtract
#echo 'unzip -q bootanimation -d bootanimationExtract done'
then echo -e "\e[31;42m 'UNZIPPING ROM, GAPPS INTO TEMPORALY FOLDER DONE' \e[0m"
  if [ "$VARIANT" = "galaxysmtd" ] ; then
    if echo -e "\e[31;42m 'UNZIPPING KERNEL PATCH720P AND RIL INTO TEMPORALY FOLDER' \e[0m" &&
    unzip -q patch720p4.4 -d patch720p4.4Extract &&
    unzip -q IyahmanKernels -d IyahmanKernelExtract &&
    unzip -q modemril -d modemrilExtract
    then echo -e "\e[31;42m 'UNZIPPING KERNEL PATCH720P AND RIL INTO TEMPORALY FOLDER DONE' \e[0m"
    else echo -e "\e[31;42m 'UNZIPPING KERNEL PATCH720P AND RIL INTO TEMPORALY FOLDER FAILED' \e[0m" && read
    fi
  fi
else echo -e "\e[31;42m 'UNZIPPING ROM, GAPPS INTO TEMPORALY FOLDER FAILED' \e[0m" && read
fi 

#****************************************************************
## Save cyanogenkernel in zip :
if [ "$VARIANT" = "galaxysmtd" ] ; then
  if echo -e "\e[31;42m 'SAVE GALAXYSMTD CYANOGENMODKERNEL' \e[0m" &&
  cd ~/android/rom/buildtemporaire/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract/ &&
  cp -rfavu boot.img ~/android/rom/ossaturekerneli9000 &&
  cd ~/android/rom/ossaturekerneli9000 &&
  zip -qrv ../cyanogenkernel4.4.zip ./ &&
  cd ~/android/rom &&
  mv -fv cyanogenkernel4.4.zip ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/
  then echo -e "\e[31;42m 'SAVE GALAXYSMTD CYANOGENMODKERNEL DONE' \e[0m"
  else echo -e "\e[31;42m 'SAVE GALAXYSMTD CYANOGENMODKERNEL FAILED' \e[0m" && read
  fi
fi

#****************************************************************
## Copy Extra Feature Into Rom Temporaly Folder :
if echo -e "\e[31;42m 'COPYING GAPPS AND OTHER STUFF INTO TEMPORALY IYAHMANROM FOLDER' \e[0m" &&
cd ~/android/rom/buildtemporaire/ &&
cp -rfavu gapps11.0Extract/* $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract
#cp -rfavu bootanimationExtract/system/media/bootanimation.zip $ROMNAME$CMVER-$VARIANTExtract/system/media
then echo -e "\e[31;42m 'COPYING GAPPS AND OTHER STUFF INTO TEMPORALY IYAHMANROM FOLDER DONE' \e[0m"
  if [ "$VARIANT" = "galaxysmtd" ] ; then
    if echo -e "\e[31;42m 'COPYING KERNEL PATCH AND RIL INTO TEMPORALY IYAHMANROM FOLDER' \e[0m" &&
    cp -rfavu patch720p4.4Extract/system/* $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract/system &&
    cp -rfavu IyahmanKernelExtract/boot.img $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract
    #cp -rfavu modemrilExtract/modemril/* $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract
    then echo -e "\e[31;42m 'COPYING KERNEL PATCH AND RIL INTO TEMPORALY IYAHMANROM FOLDER DONE' \e[0m"
    else echo -e "\e[31;42m 'COPYING KERNEL PATCH AND RIL INTO TEMPORALY IYAHMANROM FOLDER FAILED' \e[0m" && read
    fi
  fi
else echo -e "\e[31;42m 'COPYING GAPPS AND OTHER STUFF INTO TEMPORALY IYAHMANROM FOLDER FAILED' \e[0m" && read
fi

#****************************************************************
## Delete Unwanted Apk :
if echo -e "\e[31;42m 'DELETING UNWANTED STUFF' \e[0m"
then 
    if [ "$VARIANT" != "jflte" ] ; then
      if cd ~/android/rom/buildtemporaire/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract/system/app/ &&
      #dualboot apks
      rm -rfv com.github.chenxiaolong.dualbootpatcher.apk &&
      rm -rfv com.github.chenxiaolong.dualbootswitcher.apk
      then echo -e "\e[31;42m 'DELETING UNWANTED STUFF FOR $VARIANT DONE' \e[0m"
      else echo -e "\e[31;42m 'DELETING UNWANTED STUFF FOR $VARIANT FAILED' \e[0m" && read
      fi
    elif [ "$VARIANT" != "galaxysmtd" ] ; then
      if cd ~/android/rom/buildtemporaire/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract/system/app/ &&
      #semaphoremanager apk
      rm -rfv com.semaphore.sm.apk &&
      #bln pro apk
      rm -rfv neldar.bln.control.pro.apk &&
      #voodoo soud apk
      rm -rfv org.projectvoodoo.controlapp.apk &&
      cd ~/android/rom/buildtemporaire/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract/system/lib/ &&
      rm -rfv libvoodoo-sound.so &&
      rm -rfv libvoodoo-daemon-tools.so &&
      rm -rfv libvoodoo-kaudio.so
      then echo -e "\e[31;42m 'DELETING UNWANTED STUFF FOR $VARIANT DONE' \e[0m"
      else echo -e "\e[31;42m 'DELETING UNWANTED STUFF FOR $VARIANT FAILED' \e[0m" && read
      fi
    elif [ "$VARIANT" = "galaxysmtd" ] ; then
      if cd ~/android/rom/buildtemporaire/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract/system/app/ &&
      #dsp manager
      rm -rfv DSPManager.apk
      then echo -e "\e[31;42m 'DELETING UNWANTED STUFF FOR $VARIANT DONE' \e[0m"
      else echo -e "\e[31;42m 'DELETING UNWANTED STUFF FOR $VARIANT FAILED' \e[0m" && read
      fi
    fi
  if echo -e "\e[31;42m 'DELETING UNWANTED CYANOGENMOD STUFF' \e[0m" &&
  # dictionnaire clavier android
  rm -rfv LatinIME.apk &&
  #apollo
  rm -rfv Apollo.apk &&
  #black hole
  rm -rfv Galaxy4.apk &&
  #boite Ã  outils SIM
  rm -rfv Stk.apk &&
  #Bulles
  rm -rfv NoiseField.apk &&
  #calculatrice
  rm -rfv Calculator.apk &&
  #Holospiral
  rm -rfv HoloSpiralWallpaper.apk &&
  #CM file manager
  rm -rfv CMFileManager.apk &&
  #magic smoke wallpaper
  rm -rfv MagicSmokeWallpapers.apk &&
  #movie studio
  rm -rfv VideoEditor.apk &&
  #navigateur
  rm -rfv Browser.apk &&
  #phase beam
  rm -rfv PhaseBeam.apk &&
  # Gallery cm11
  rm -rfv Gallery2.apk &&
  # camera cm11
  rm -rfv Camera2.apk &&
  cd ~/android/rom/buildtemporaire/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract/system/priv-app/ &&
  #cm updater
  rm -rfv CMUpdater.apk &&
  #pico tts
  rm -rfv PicoTts.apk &&
  #reconnaissance vocal
  rm -rfv VoiceDialer.apk &&
  #trebuchet
  rm -rfv Trebuchet.apk &&
  cd ~/android/rom/buildtemporaire/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract/system/tts/ &&
  rm -rfv lang_pico
  then echo -e "\e[31;42m 'DELETING UNWANTED CYANOGENMOD STUFF DONE' \e[0m"
  else echo -e "\e[31;42m 'DELETING UNWANTED CYANOGENMOD STUFF FAILED' \e[0m" && read
  fi
echo -e "\e[31;42m 'DELETING UNWANTED STUFF DONE' \e[0m"
fi

#****************************************************************
## Zip Rom In Temporaly Folder:
if echo -e "\e[31;42m 'ZIPPING IYAHMANROM' \e[0m" &&
cd ~/android/rom/buildtemporaire/ &&
rm -rfv $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`.zip &&
cd $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract &&
zip -qrv ../$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`.zip ./
then echo -e "\e[31;42m 'ZIPPING IYAHMANROM DONE' \e[0m"
else echo -e "\e[31;42m 'ZIPPING IYAHMANROM FAILED' \e[0m" && read
fi

#****************************************************************
## Move rom To Final Folder :
if echo -e "\e[31;42m 'MOVING IYAHMANROM INTO FINAL DIRECTORY' \e[0m" &&
cd ~/android/rom/buildtemporaire/ &&
mv -fv $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`.zip ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/
then echo -e "\e[31;42m 'MOVING IYAHMANROM INTO FINAL DIRECTORY DONE' \e[0m" 
else echo -e "\e[31;42m 'MOVING IYAHMANROM INTO FINAL DIRECTORY FAILED' \e[0m" && read
fi

#****************************************************************
## Dual Boot :
if [ "$VARIANT" = "jflte" ] ; then 
  if echo -e "\e[31;42m 'PATCH FOR DUALBOOT I9505' \e[0m" &&
  cd ~/android/rom/iyahmanrom$CMVER/out/target/product/jflte/ &&
  cp -f $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`.zip cm-11-`date -u +%Y%m%d`-NIGHTLY-jflte.zip &&
  cd ~/android/DualBootPatcher &&
  ./patch-file.sh /home/iyahman/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/cm-11-`date -u +%Y%m%d`-NIGHTLY-jflte.zip &&
  cd ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/ &&
  mv -fv cm-11-`date -u +%Y%m%d`-NIGHTLY-jflte_dualboot.zip $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`"_dualboot".zip &&
  rm -rfv cm-11-`date -u +%Y%m%d`-NIGHTLY-jflte.zip 
  then timer && echo -e "\e[31;42m 'PATCH FOR DUALBOOT I9505 DONE' \e[0m" 
  else echo -e "\e[31;42m 'PATCH FOR DUALBOOT I9505 FAILED' \e[0m" && read
  fi
fi

#****************************************************************
## Sign cm-$ROMNAME$CMVER-$VARIANT :
if echo -e "\e[31;42m 'SIGNING ZIP' \e[0m" &&
cd ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/ &&
openssl pkcs8 -in /home/iyahman/android/rom/iyahmanrom$CMVER/build/target/product/security/testkey.pk8 -inform DER -nocrypt &&
java -Xmx2048m -jar /home/iyahman/android/rom/iyahmanrom$CMVER/out/host/linux-x86/framework/signapk.jar -w ~/android/rom/iyahmanrom$CMVER/build/target/product/security/testkey.x509.pem ~/android/rom/iyahmanrom$CMVER/build/target/product/security/testkey.pk8 $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`.zip $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`-signed.zip 
then timer && echo -e "\e[31;42m 'SIGNING ZIP DONE' \e[0m"
  if [ "$VARIANT" = "jflte" ] ; then 
    if echo -e "\e[31;42m 'SIGNING ZIP' \e[0m" &&
    cd ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/ &&
    openssl pkcs8 -in /home/iyahman/android/rom/iyahmanrom$CMVER/build/target/product/security/testkey.pk8 -inform DER -nocrypt &&
    java -Xmx2048m -jar /home/iyahman/android/rom/iyahmanrom$CMVER/out/host/linux-x86/framework/signapk.jar -w ~/android/rom/iyahmanrom$CMVER/build/target/product/security/testkey.x509.pem ~/android/rom/iyahmanrom$CMVER/build/target/product/security/testkey.pk8 $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`"_dualboot".zip $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`"_dualboot"-signed.zip 
    then timer && echo -e "\e[31;42m 'SIGNING DUALBOOT ZIP DONE' \e[0m" 
    else  echo -e "\e[31;42m 'SIGNING DUALBOOT ZIP FAILED' \e[0m" && read
    fi
  fi
else echo -e "\e[31;42m 'SIGNING ZIP FAILED' \e[0m" && read
fi

#****************************************************************
## Zipalign $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I` :
if echo -e "\e[31;42m 'ZIPALIGNING' \e[0m" &&
cd ~/android/sdk/tools/
#zipalign -c -v 4 ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`-signed.zip
zipalign -f -v 4 ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`-signed.zip ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`-signed-zipaligned.zip
then timer && echo -e "\e[31;42m 'ZIPALIGNING DONE' \e[0m"
  if [ "$VARIANT" = "jflte" ] ; then 
    if echo -e "\e[31;42m 'ZIPALIGNING DUALBOOT' \e[0m" &&
    cd ~/android/sdk/tools/ &&
    #zipalign -c -v 4 ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`"_dualboot".zip
    zipalign -f -v 4 ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`"_dualboot"-signed.zip ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/$ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`"_dualboot"-signed-zipaligned.zip
    then timer && echo -e "\e[31;42m 'ZIPALIGNING  DUALBOOT DONE' \e[0m"
    else echo -e "\e[31;42m 'ZIPALIGNING  DUALBOOT FAILED' \e[0m" && read
    fi
  fi
else echo -e "\e[31;42m 'ZIPALIGNING FAILED' \e[0m"
fi

#****************************************************************
## Clean buildtemporaire:
if echo -e "\e[31;42m 'CLEANING TEMPORALY FILE' \e[0m" &&
cd ~/android/rom/buildtemporaire/ &&
rm -rfv $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`Extract &&
rm -rfv $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`.zip &&
rm -rfv gapps11.0Extract &&
rm -rfv gapps11.0.zip &&
rm -rfv bootanimationExtract &&
rm -rfv bootanimation.zip &&
cd ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/ &&
rm -rfv $ROMNAME$CMVER-$VARIANT$TOOLCHAIN-`date -I`.zip.md5sum
then echo -e "\e[31;42m 'CLEANING TEMPORALY FILE DONE' \e[0m"
  if [ "$VARIANT" = "galaxysmtd" ] ; then
    if echo -e "\e[31;42m 'CLEANING TEMPORALY GALAXYSMTD SPECIAL FILE' \e[0m" &&
    rm -rfv patch720p4.4Extract &&
    rm -rfv patch720p4.4.zip &&
    rm -rfv IyahmanKernelExtract &&
    rm -rfv IyahmanKernels.zip &&
    rm -rfv modemril.zip &&
    rm -rfv modemrilExtract &&
    cd ~/android/rom/semaphore/11.0/output/galaxys &&
    rm -rfv IyahmanKernelsOld.zip &&
    rm -rfv IyahmanKernelsOld.tar
    then echo -e "\e[31;42m 'CLEANING TEMPORALY GALAXYSMTD SPECIAL FILE DONE' \e[0m"
    else echo -e "\e[31;42m 'CLEANING TEMPORALY GALAXYSMTD SPECIAL FILE FAILED' \e[0m"
    fi
  fi
else echo -e "\e[31;42m 'CLEANING TEMPORALY FILE FAILED' \e[0m" && read
fi

echo -e "\e[31;42m '############################################################################################################################' \e[0m"
echo -e "\e[31;42m '###################################################### BUILD TERMINÃ‰ #######################################################' \e[0m"
echo -e "\e[31;42m '############################################################################################################################' \e[0m"

#****************************************************************
## Report TOTAL timer:
DATE_END=$(date +"%s")
echo
DIFF=$(($DATE_END - $DATE_START))
echo {$ROMNAME$CMVER POUR $VARIANT FINI EN} "$(($DIFF / 60)) minute(s) and $(($DIFF % 60)) seconds."

#****************************************************************
## Open Final Build Directory:
spd-say 'BUILD SUCCESFULL' && nautilus ~/android/rom/iyahmanrom$CMVER/out/target/product/$VARIANT/

#sudo bash -c sleep 5m; pm-suspend-hybrid
#exit
