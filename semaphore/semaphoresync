#!/bin/bash

#****************************************************************
## Start Timer :
START=$(date +%s)

#****************************************************************
## Clone iyahman ics-ramdisk github repo :
cd ~/android/kernel/semaphore/"original semaphore kernel files"
cd ~/android/kernel/semaphore/11.0
git clone -b kk-4.4 git://github.com/iyahman/ics-ramdisk

#****************************************************************
## Extract jb_combo file :
cd ~/android/kernel/semaphore/"original semaphore kernel files"/ics-ramdisk
cd ~/android/kernel/semaphore/11.0/ics-ramdisk
sleep 2s
tar zxvf jb_combo.tar.gz
tar zxvf jb_combo_c.tar.gz
tar zxvf jb_combo_v.tar.gz
echo fait

#****************************************************************
## Clone iyahman kernel and recovery github repo :
cd ~/android/kernel/semaphore/"original semaphore kernel files"
git clone -b kk-4.4 git://github.com/iyahman/samsung-kernel-aries
git clone -b kk-4.4 git://github.com/iyahman/android_bootable_recovery


#****************************************************************
## adapt sbuild config :
# cd ~/android/kernel/semaphore/11.0/samsung-kernel-aries
# sed -i 's#../toolchain/arm-linux-gnueabihf-#~/android/utilitaire/linaro/linaro-toolchains1/bin/arm-cortex_a8-linux-gnueabi-#g' sbuild.sh
# sed -i 's/"Semaphore_KK_*.*.*"/"IyahmanKernel"/g' sbuild.sh

#****************************************************************
## apply patch :
# patch -p1 < patch-3.0.58-59

#****************************************************************
## Report Timer :
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}ELAPSED: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC
