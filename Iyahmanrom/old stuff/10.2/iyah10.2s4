#!/bin/bash

echo 'HELLO IYAHMAN'
echo
echo 'LAUNCH IYAHMANROM V2.5 GALAXY S4 BUILD SCRIPT: CM10.2, CUSTOM COMPILER, GAPPS WITH CUSTOM APK,
      HOST AND GPS CONF; PATCH720P, JW4 MODEM+RIL, BOOTANIMATION & SEMAPHORE KERNEL'
echo
echo

#****************************************************************
## Set Basic Parameters :

#****************************************************************
## Open ccache and cpu monitor:
#cache
#gnome-system-monitor

#****************************************************************
## Start Timer :
START=$(date +%s)

#****************************************************************
## Start Total Timer :
#DATE_START=$(date +"%s")


#****************************************************************
##Use Gcc cyanogen:
#if echo 'REINSTALL CYANOGEN GCC'
#rm -r ~/android/rom/iyahmanrom10.2/prebuilts/gcc/linux-x86/arm/*
#cp -Ravu ~/android/cyanogengcc/* ~/android/rom/iyahmanrom10.2/prebuilts/gcc/linux-x86/arm/
#then echo 'REINSTALL CYANOGEN GCC DONE'
#else read
#fi

#****************************************************************
##Update android SDK:
#android list sdk
#android update sdk --no-ui

#****************************************************************
##Installclean : Wipe out the stuff that changes from one make target to another.
if echo 'INSTALLCLEAN'
cd ~/android/rom/iyahmanrom10.2/
make installclean
echo 'installclean done'
find ./out/ -name 'build.prop' | xargs rm
echo './out/ -name build.prop | xargs rm done'
find ./out/ -name 'cm_jfltexx-target_files-eng.*.zip' | xargs rm
echo './out/ -name cm_jfltexx-target_files-eng.*.zip | xargs rm done'
then echo 'INSTALLCLEAN DONE'
else read
fi

#****************************************************************
##Remove output directory : Prevents problems on rebuilds, but a build takes only 60-70 minutes in stead of 180 after a make clobber.
#rm -rf ~/android/rom/iyahmanrom10.2/out/target/product/jfltexx

#****************************************************************
##Make Clean : deletes all the object files created
#if echo 'MAKE CLEAN'
#then 
cd ~/android/rom/iyahmanrom10.2/
make clean
#echo 'MAKE CLEAN DONE'
#else read
#fi
#. build/envsetup.sh && breakfast jfltexx
#cp -rv ~/android/extractedfiles/jfltexx ~/android/rom/iyahmanrom10.2/device/samsung
#adb root
#cd ~/android/rom/iyahmanrom10.2/device/samsung/jfltexx/
#./extract-files.sh
#~/android/rom/iyahmanrom10.2/vendor/cm/get-prebuilts

#****************************************************************
##Make Clobber : deletes all the object files AND the intermediate dependency files generated which specify the dependencies of the cpp files.
#if echo 'MAKE CLOBBER'
#then 
#cd ~/android/rom/iyahmanrom10.2/
#make clobber
#echo 'MAKE CLOBBER DONE'
#else read
#fi
#if 
#. build/envsetup.sh && breakfast jfltexx
#adb root
#sleep 3s
#cd ~/android/rom/iyahmanrom10.2/device/samsung/jfltexx/
#./extract-files.sh
#cp -rfv ~/android/extractedfiles/jfltexx ~/android/rom/iyahmanrom10.2/device/samsung
#~/android/rom/iyahmanrom10.2/vendor/cm/get-prebuilts
#cd ~/android/rom/iyahmanrom10.2/vendor/cm/config
#sed -i 's/$(PRODUCT_VERSION_MAJOR).$(PRODUCT_VERSION_MINOR)-$(shell date -u +%Y%m%d)-$(CM_BUILDTYPE)$(CM_EXTRAVERSION)-$(CM_BUILD)/IyahmanRom10.2/g' common.mk
#then echo 'REINSTALL AFTER CLOBBER DONE'
#else read
#fi

#****************************************************************
## Save extracted files :
#adb root
#cd ~/android/extractedfiles
#sleep 3s
#./extract-files.sh

#****************************************************************
## Report Timer :
#END=$(date +%s)
#ELAPSED=$((END - START))
#E_MIN=$((ELAPSED / 60))
#E_SEC=$((ELAPSED - E_MIN * 60))
#printf "${txtgrn}ELAPSED: "
#[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
#printf "%d sec(s)\n ${txtrst}" $E_SEC
#echo

#****************************************************************
##Remove Previous Kernel Build :
echo 'REMOVING PREVIOUS BUILD IN semaphore/output/'
cd ~/android/rom/semaphore/10.2/output/galaxys
cp -rv IyahmanKernels.zip IyahmanKernelsOld.zip
echo 'cp IyahmanKernels.zip IyahmanKernelsOld.zip done'
cp -rv IyahmanKernels.tar IyahmanKernelsOld.tar
echo 'cp IyahmanKernels.zip IyahmanKernelsOld.tar done'
rm -rf IyahmanKernels.zip
echo 'rm IyahmanKernels.zip done'
rm -rf IyahmanKernels.tar
echo 'rm IyahmanKernels.tar done'
echo 'REMOVING PREVIOUS BUILD IN semaphore/output/  DONE'

#****************************************************************
## Clean buildtemporaire:
echo 'CLEANING TEMPORALY FILE'
cd ~/android/rom/buildtemporaire
rm -rf IyahmanRom10.2Extract
rm -rf gapps10.2s4Extract
rm -rf gapps10.2s4.zip
rm -rf patch720p4.3Extract
rm -rf patch720p4.3.zip
rm -rf bootanimationExtract
rm -rf bootanimation.zip
rm -rf IyahmanKernelExtract
rm -rf IyahmanKernels.zip
rm -rf modemril.zip
rm -rf modemrilExtract
echo 'CLEANING TEMPORALY FILE DONE'

#****************************************************************
##Synchronization and else remove vendor sync and modify common.mk by IyahmanRom10.2 :
if echo 'SYNCHRONIZATION'
cd ~/android/rom/iyahmanrom10.2/
#curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo
#chmod a+x ~/bin/repo
#repo init -u git://github.com/CyanogenMod/android.git -b cm-10.2
#echo 'repo init -u git://github.com/CyanogenMod/android.git -b cm-10.2 done'
repo selfupdate
repo sync -j16
then echo 'REPO SYNC -j16 DONE'
#else 
      #if echo 'REPO SYNC -j16 FAILED, RETRY..'
      #then 
      #rm -rf ~/android/rom/iyahmanrom10.2/vendor/cm/config/common.mk
            #repo sync -j16
      #~/android/rom/iyahmanrom10.2/vendor/cm/get-prebuilts
      #cd ~/android/rom/iyahmanrom10.2/vendor/cm/config
      #sed -i 's/$(PRODUCT_VERSION_MAJOR).$(PRODUCT_VERSION_MINOR)-$(shell date -u +%Y%m%d)-$(CM_BUILDTYPE)$(CM_EXTRAVERSION)-$(CM_BUILD)/IyahmanRom10.2/g' common.mk
      #echo 'REPO SYNC DONE'
      #else echo 'REPO SYNC FAILED AGAIN'
      #read
      #fi
fi

#****************************************************************
##Save Gcc:
cp -Ravu ~/android/rom/iyahmanrom10.2/prebuilts/gcc/linux-x86/arm/* ~/android/cyanogengcc

#****************************************************************
##Use Gcc Linaro 4.8: put linaro 4.8 on cyanogen prebuilts
#cd ~/android/linaro/gcc-linaro
#bunzip2 *.tar.bz2
#tar -xvf *.tar
#rm -r *.tar
#rm -r ~/android/rom/iyahmanrom10.2/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6/*
#rm -r ~/android/rom/iyahmanrom10.2/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/*
#cp -Rv ~/android/linaro/gcc-linaro/android-toolchain-eabi/* ~/android/rom/iyahmanrom10.2/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6
#cp -Rv ~/android/linaro/gcc-linaro/android-toolchain-eabi/* ~/android/rom/iyahmanrom10.2/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6
#rm -r ~/android/rom/iyahmanrom10.2/prebuilts/gcc/linux-x86/arm/*

#****************************************************************
## config compiler for cyanogen kernel :
#if echo 'USE CUSTOM TOOLCHAIN FOR CYANOGEN KERNEL'
#then 
#cd ~/android/rom/iyahmanrom10.2/kernel/samsung/aries
#make mrproper
#echo "CONFIG_S5P_HUGEMEM=y" >> .config
#export ARCH=arm
#export CROSS_COMPILE=~/android/linaro/linaro-toolchains/bin/arm-cortex_a8-linux-gnueabi-
#echo 'USE CUSTOM TOOLCHAIN FOR CYANOGEN KERNEL DONE'
#else read
#fi

#****************************************************************
## Report Timer :
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}ELAPSED: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC
echo

#****************************************************************
##Add Cherry Pick :
#echo
#cd ~/android/rom/iyahmanrom10.2/kernel/samsung/aries
#make menuconfig
#make mrproper
#make clean
#cd /home/iyahman/Bureau/mesbuildscripts/Iyahmanrom/10.2
#cp -fv cyanogenmod_jfltexx_defconfig /home/iyahman/android/rom/iyahmanrom10.2/kernel/samsung/aries/arch/arm/configs

#****************************************************************
##replace original system syze by Iyah 
#cd ~/android/rom/iyahmanrom10.2/device/samsung/aries-common
#sed -i 's/629145600/304087040/g' updater.sh

#****************************************************************
##Build CM10 :
if echo 'BUILD CM10.1 ROM'
cd ~/android/rom/iyahmanrom10.2/
then 
export USE_CCACHE=1 
. build/envsetup.sh && brunch jfltexx
echo 'BUILD CM10.1 ROM DONE'
else read
fi

#****************************************************************
## Report Timer :
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}ELAPSED: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC
echo

#****************************************************************
##Build Semaphore :
#if echo 'BUILD IYAHMANKERNEL'
#cp -v /home/iyahman/android/rom/iyahmanrom10.2/out/target/product/jfltexx/recovery/root/sbin/recovery /home/iyahman/android/rom/semaphore/ics-ramdisk/jb_combo/ics_rec_init/sbin/
#then cd /home/iyahman/android/rom/semaphore/10.2/samsung-kernel-aries/
#make clean
#make CROSS_COMPILE=/home/iyahman/android/linaro/gcc-linaro-arm-linux-gnueabihf-2012.09-20120921_linux/bin/arm-linux-gnueabihf- ARH=arm menuconfig
#export USE_CCACHE=1
#make mrproper
#make clean
#./sbuild.sh galaxys s
#echo
#echo 'BUILD IYAHMANKERNEL DONE'
#else read
#fi

#****************************************************************
## Report timer :
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}ELAPSED: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC
echo

#****************************************************************
## Save Unofficial Nightly :
if echo 'SAVE UNOFFICIAL NIGHTLY'
then cd ~/android/rom/iyahmanrom10.2/out/target/product/jfltexx/
cp -v cm-IyahmanRom10.2.zip cm-10.2-`date -I`-UNOFFICIAL-jfltexx.zip
echo 'SAVE UNOFFICIAL NIGHTLY DONE'
else read
fi

#****************************************************************
## Move Rom And Extra Feature Into Temporaly Folder :
if echo 'MOVING ROM, GAPPS, PATCH720P, BOOT ANIMATION & SEMAPHORE INTO TEMPORALY FOLDER'
then cd ~/android/rom/iyahmanrom10.2/out/target/product/jfltexx/
mv -fv cm-IyahmanRom10.2.zip ~/android/rom/buildtemporaire
echo 'mv cm-IyahmanRom10.2.zip ~/android/rom/buildtemporaire done'
cd /home/iyahman/Bureau/
cp -rv gapps10.2s4.zip ~/android/rom/buildtemporaire
echo 'cp gapps10.2s4.zip ~/android/rom/buildtemporaire done'
#cd /home/iyahman/Bureau/
#cp -rv patch720p4.3.zip ~/android/rom/buildtemporaire
#echo 'cp patch720p4.3.zip ~/android/rom/buildtemporaire done'
#cd /home/iyahman/Bureau/
#cp -rv bootanimation.zip ~/android/rom/buildtemporaire
#echo 'cp bootanimation.zip ~/android/rom/buildtemporaire done'
#cd /home/iyahman/android/rom/semaphore/10.2/output/galaxys
#cp -rv IyahmanKernels.zip ~/android/rom/buildtemporaire
#echo 'cp IyahmanKernels.zip ~/android/rom/buildtemporaire done'
#cd /home/iyahman/Bureau/
#cp -rv modemril.zip ~/android/rom/buildtemporaire
#echo 'cp modemril.zip ~/android/rom/buildtemporaire done'
echo 'MOVING ROM, GAPPS, PATCH720P,BOOT ANIMATION & SEMAPHORE INTO TEMPORALY FOLDER DONE'
else read
fi

#****************************************************************
## unzip Rom And Extra Feature Into Respective Temporaly Folder :
if echo 'UNZIPPING ROM, GAPPS, PATCH720P & SEMAPHORE INTO TEMPORALY FOLDER'
then 
cd ~/android/rom/buildtemporaire/
unzip -q cm-IyahmanRom10.2 -d IyahmanRom10.2Extract
echo 'unzip -q cm-IyahmanRom10.2 -d IyahmanRom10.2Extract done'
unzip -q gapps10.2s4 -d gapps10.2s4Extract
echo 'unzip -q gapps10.2s4 -d gapps10.2s4Extract done'
#unzip -q patch720p4.3 -d patch720p4.3Extract
#echo 'unzip -q patch720p4.3 -d patch720p4.3Extract done'
#unzip -q bootanimation -d bootanimationExtract
#echo 'unzip -q bootanimation -d bootanimationExtract done'
#unzip -q IyahmanKernels -d IyahmanKernelExtract
#echo 'unzip -q IyahmanKernels -d IyahmanKernelExtract done'
#unzip -q modemril -d modemrilExtract
#echo 'unzip -q modemril -d modemrilExtract done'
echo 'UNZIPPING ROM, GAPPS, PATCH720P & SEMAPHORE INTO TEMPORALY FOLDER DONE'
else read
fi

#****************************************************************
## Save cyanogenkernel in zip :
#cd ~/android/rom/buildtemporaire/IyahmanRom10.2Extract/
#cp boot.img ~/android/rom/ossaturekernel
#cd ~/android/rom/ossaturekernel
#zip -qr ../cyanogenkernel4.3.zip ./
#cd ~/android/rom
#mv cyanogenkernel4.3.zip ~/android/rom/iyahmanrom10.2/out/target/product/jfltexx/

#****************************************************************
## Copy Extra Feature Into Rom Temporaly Folder :
if echo 'COPYING GAPPS PATCH720P SEMAPHORE INTO TEMPORALY IYAHMANROM FOLDER'
then 
cd ~/android/rom/buildtemporaire/
#cp -rv patch720p4.3Extract/system/* IyahmanRom10.2Extract/system
#echo 'cp -R patch720p4.3Extract/system/* IyahmanRom10.2Extract/system done'
#cp -rv bootanimationExtract/system/media/bootanimation.zip IyahmanRom10.2Extract/system/media
#echo 'cp -R bootanimationExtract/system/media/bootanimation.zip IyahmanRom10.2Extract/system/media done'
#cp -rv IyahmanKernelExtract/boot.img IyahmanRom10.2Extract
#echo 'cp -R IyahmanKernelExtract/boot.img IyahmanRom10.2Extract done'
#cp -rv modemrilExtract/modemril/* IyahmanRom10.2Extract
#echo 'cp -R modemrilExtract/* IyahmanRom10.2Extract done'
cp -rv gapps10.2s4Extract/* IyahmanRom10.2Extract
echo 'cp -R gapps10.2s4Extract/* IyahmanRom10.2Extract done'
echo 'COPYING GAPPS PATCH720P SEMAPHORE INTO TEMPORALY IYAHMANROM FOLDER DONE'
else read
fi

#****************************************************************
## Delete Unwanted Apk :
#if echo 'DELETING UNWANTED APK'
#then 
#cd ~/android/rom/buildtemporaire/IyahmanRom10.2Extract/system/app/
#actualité et meteo
#rm -f GenieWidget.apk
#echo 'rm GenieWidget.apk done'
# clavier android
#rm -f LatinImeDictionaryPack.apk
#echo 'rm LatinImeDictionaryPack.apk done'
# dictionnaire clavier android
#rm -f LatinIME.apk
#echo 'rm LatinIME.apk done'
#apollo
#rm -f Apollo.apk
#echo 'rm Apollo.apk done'
#Lockclock
#rm -f LockClock.apk
#echo 'rm LockClock.apk done'
#black hole
#rm -f Galaxy4.apk
#echo 'rm Galaxy4.apk done'
#boite à outils SIM
#rm -f Stk.apk
#echo 'rm Stk.apk done'
#Bulles
#rm -f NoiseField.apk
#echo 'rm NoiseField.apk done'
#calculatrice
#rm -f Calculator.apk
#echo 'rm Calculator.apk done'
#cm updater
#rm -f CMUpdater.apk
#echo 'rm CMUpdater.apk done'
#Holospiral
#rm -f HoloSpiralWallpaper.apk
#echo 'rm HoloSpiralWallpaper.apk done'
#voicesearch
#rm -f VoiceSearchStub.apk
#echo 'rm VoiceSearchStub.apk done'
#dev tools
#rm -f Development.apk
#echo 'rm Development.apk done'
#dsp manager
#rm -f DSPManager.apk
#echo 'rm DSPManager.apk done'
#CM file manager
#rm -f CMFileManager.apk
#echo 'rm CMFileManager.apk done'
#face unlock
#rm -f FaceLock.apk
#echo 'rm FaceLock.apk done'
#livewallpaper
#rm -f LiveWallpapers.apk
#echo 'rm LiveWallpapers.apk done'
#CM wallpaper
#rm -f CMWallpapers.apk
#echo 'rm CMWallpapers.apk done'
#visualisation wallpaper
#rm -f VisualizationWallpapers.apk
#echo 'rm VisualizationWallpapers.apk done'
#magic smoke wallpaper
#rm -f MagicSmokeWallpapers.apk
#echo 'rm MagicSmokeWallpapers.apk done'
#gmail
#rm -f Gmail.apk
#echo 'rm Gmail2.apk done'
#moteur synthese vocal
#rm -f GoogleTTS.apk
#echo 'rm GoogleTTS.apk done'
#movie studio
#rm -f VideoEditor.apk
#echo 'rm VideoEditor.apk done'
#navigateur
#rm -f Browser.apk
#echo 'rm Browser.apk done'
#quicksearhbox
#rm -f QuickSearchBox.apk
#echo 'rm QuickSearchBox.apk done'
#phase beam
#rm -f PhaseBeam.apk
#echo 'rm PhaseBeam.apk done'
#pico tts
#rm -f PicoTts.apk
#echo 'rm PicoTts.apk done'
#google ears
#rm -f GoogleEars.apk
#echo 'rm GoogleEars.apk done'
#reconnaissance vocal
#rm -f VoiceDialer.apk
#echo 'rm VoiceDialer.apk done'
#service exchange
#rm -f Exchange2.apk
#echo 'rm Exchange2.apk done'
#selecteur wallpaper animé
#rm -f LiveWallpapersPicker.apk
#echo 'rm LiveWallpapersPicker.apk done'
# talk
#rm -f Talk.apk
#echo 'rm Talk.apk done'
# talkback
#rm -f TalkBack.apk
#echo 'rm Talkback.apk done'
# terminal emulator
#rm -f Term.apk
#echo 'rm term.apk done'
#trebuchet
#rm -f Trebuchet.apk
#echo 'rm Trebuchet.apk done'
# theme cm file manager
#rm -f CMFileManagerThemes.apk
#echo 'rm CMFileManagerThemes.apk done'
#vpn dialog
#rm -f VpnDialogs.apk
#echo 'rm VpnDialogs.apk done'
# ecran de veille interactif
#rm -f BasicDreams.apk
#echo 'rm BasicDreams.apk done'
# ecran de veille photo
#rm -f PhotoTable.apk
#echo 'rm PhotoTable.apk done'
# BackupRestoreConfirmation
#rm -f BackupRestoreConfirmation.apk
#echo 'rm BackupRestoreConfirmation.apk done'
# GoogleBackupTransport
#rm -f GoogleBackupTransport.apk
#echo 'rm GoogleBackupTransport.apk done'
# Media uploader
#rm -f MediaUploader.apk
#echo 'rm MediaUploader.apk done'
# CellBroadcastReceiver
#rm -f CellBroadcastReceiver.apk
#echo 'rm CellBroadcastReceiver.apk done'
# Gallery cm10
#rm -f GalleryGoogle.apk
#echo 'rm GalleryGoogle.apk done'
# Sms/Mms cm10
#rm -f Mms.apk
#echo 'rm Mms.apk done'
# googleplus
#rm -f GooglePlus.apk
#echo 'rm googleplus.apk done'
# voiceplus
#rm -f VoicePlus.apk
#echo 'rm voiceplus.apk done'
# partage bluetooth
#rm -f Bluetooth.apk
#echo 'rm bluetooth.apk done'
#echo 'DELETING UNWANTED APK DONE'
#else read
#fi

#****************************************************************
## Zip Rom In Temporaly Folder:
if echo 'ZIPPING IYAHMANROM'
then 
cd ~/android/rom/buildtemporaire/
rm -f cm-IyahmanRom10.2.zip
echo 'remove prebuilt cm-IyahmanRom10.2.zip done'
cd IyahmanRom10.2Extract
zip -qr ../cm-IyahmanRom10.2.zip ./
echo 'make full cm-IyahmanRom10.2.zip done'
echo 'ZIPPING IYAHMANROM DONE'
else read
fi

#****************************************************************
## Sign cm-IyahmanRom10.2 :
if echo 'SIGNING ZIP'
then 
cd ~/android/rom/buildtemporaire/
java -jar ~/android/rom/iyahmanrom10.2/out/host/linux-x86/framework/signapk.jar ~/android/rom/iyahmanrom10.2/build/target/product/security/testkey.x509.pem ~/android/rom/iyahmanrom10.2/build/target/product/security/testkey.pk8 cm-IyahmanRom10.2.zip cm-IyahmanRom10.2-signed.zip
echo 'SIGNING ZIP DONE'
else read
fi

#****************************************************************
## Zipalign cm-IyahmanRom10.2 :
if echo 'ZIPALIGNING'
then 
cd ~/android/sdk/tools/
zipalign -v 4 ~/android/rom/buildtemporaire/cm-IyahmanRom10.2-signed.zip
zipalign -c -v 4 ~/android/rom/buildtemporaire/cm-IyahmanRom10.2-signed.zip
echo 'ZIPALIGNING DONE'
else read
fi

#****************************************************************
## Move rom To Final Folder :
if echo 'MOVING IYAHMANROM INTO FINAL DIRECTORY'
then cd ~/android/rom/buildtemporaire/
mv -f cm-IyahmanRom10.2-signed.zip ~/android/rom/iyahmanrom10.2/out/target/product/jfltexx/
echo 'MOVING IYAHMANROM INTO FINAL DIRECTORY DONE'
else read
fi

#****************************************************************
## Rename Rom :
if echo 'RENAMING BUILD'
then 
cd ~/android/rom/iyahmanrom10.2/out/target/product/jfltexx/
mv -f cm-IyahmanRom10.2-signed.zip IyahmanRom10.2S4-`date -I`-signed.zip
echo 'RENAMING BUILD DONE'
else read
fi

#****************************************************************
## Clean buildtemporaire:
if echo 'CLEANING TEMPORALY FILE'
then 
cd ~/android/rom/buildtemporaire/
rm -rf IyahmanRom10.2Extract
rm -rf gapps10.2s4Extract
rm -rf gapps10.2s4.zip
rm -rf patch720p4.3Extract
rm -rf patch720p4.3.zip
rm -rf bootanimationExtract
rm -rf bootanimation.zip
rm -rf IyahmanKernelExtract
rm -rf IyahmanKernels.zip
rm -rf modemril.zip
rm -rf modemrilExtract
rm -rf cm-IyahmanRom10.2.zip
cd ~/android/rom/iyahmanrom10.2/out/target/product/jfltexx/
rm -rf cm-IyahmanRom10.2.zip.md5sum
cd ~/android/rom/semaphore/10.2/output/galaxys
rm -rf IyahmanKernelsOld.zip
rm -rf IyahmanKernelsOld.tar
echo 'CLEANING TEMPORALY FILE DONE'
else read
fi
echo
echo
echo
echo 'BUILDING SUCCESSFULL'
echo
echo
echo

#****************************************************************
## Report timer :
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}ELAPSED: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC
echo

#****************************************************************
## Report TOTAL timer:
#DATE_END=$(date +"%s")
#echo
#DIFF=$(($DATE_END - $DATE_START))
#echo 'BUILD SEMAPHORE & CM10.1 FINI EN' "$(($DIFF / 60)) minute(s) and $(($DIFF % 60)) seconds."

#****************************************************************
## Open Final Build Directory:
nautilus ~/android/rom/iyahmanrom10.2/out/target/product/jfltexx/


#sudo bash -c "sleep 5m; pm-suspend"
#exit
