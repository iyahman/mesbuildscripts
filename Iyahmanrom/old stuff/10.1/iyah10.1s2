#!/bin/bash

echo 'HELLO IYAHMAN'
echo
echo 'LAUNCH IYAHMANROM V2.5 GALAXY S2 BUILD SCRIPT: CM10.1, HOST AND GPS CONF, CUSTOM COMPILER, INVERTGAPPS WITH CUSTOM APK & BOOTANIMATION'
echo
echo

#****************************************************************
## Set Basic Parameters :

#****************************************************************
## Open ccache and cpu monitor:
#cache
#gnome-system-monitor

#****************************************************************
## Start Timer :
START=$(date +%s)

#****************************************************************
## Start Total Timer :
#DATE_START=$(date +"%s")

#****************************************************************
##Installclean : Wipe out the stuff that changes from one make target to another.
if echo 'INSTALLCLEAN'
cd ~/android/rom/iyahmanrom10.1/
make installclean
echo 'installclean done'
find ./out/ -name 'build.prop' | xargs rm
echo './out/ -name build.prop | xargs rm done'
find ./out/ -name 'cm_i9100-target_files-eng.*.zip' | xargs rm
echo './out/ -name cm_i9100-target_files-eng.*.zip | xargs rm done'
then echo 'INSTALLCLEAN DONE'
else read
fi

#****************************************************************
## Save extracted files :
#cp -rv ~/android/rom/iyahmanrom10.1/device/samsung/i9100 ~/android/extractedfiles

#****************************************************************
##Remove output directory : Prevents problems on rebuilds, but a build takes only 60-70 minutes in stead of 180 after a make clobber.
#rm -rf ~/android/rom/iyahmanrom10.1/out/target/product/i9100

#****************************************************************
##Make Clean : deletes all the object files created
#if echo 'MAKE CLEAN'
#then cd ~/android/rom/iyahmanrom10.1/
#make clean
#echo 'MAKE CLEAN DONE'
#else read
#fi
#. build/envsetup.sh && breakfast i9100
#cp -rv ~/android/extractedfiles/i9100 ~/android/rom/iyahmanrom10.1/device/samsung
#adb root
#sleep 3s
#cd ~/android/rom/iyahmanrom10.1/device/samsung/i9100/
#./extract-files.sh
#~/android/rom/iyahmanrom10.1/vendor/cm/get-prebuilts

#****************************************************************
##Make Clobber : deletes all the object files AND the intermediate dependency files generated which specify the dependencies of the cpp files.
#if echo 'MAKE CLOBBER'
#then cd ~/android/rom/iyahmanrom10.1/
make clobber
#echo 'MAKE CLOBBER DONE'
#else read
#fi
#if 
. build/envsetup.sh && breakfast i9100
#adb root
#sleep 3s
#cd ~/android/rom/iyahmanrom10.1/device/samsung/i9100/
#./extract-files.sh
#cp -rv ~/android/extractedfiles/i9100 ~/android/rom/iyahmanrom10.1/device/samsung
~/android/rom/iyahmanrom10.1/vendor/cm/get-prebuilts
#then echo 'REINSTALL AFTER CLOBBER DONE'
#else read
#fi

#****************************************************************
## Report Timer :
#END=$(date +%s)
#ELAPSED=$((END - START))
#E_MIN=$((ELAPSED / 60))
#E_SEC=$((ELAPSED - E_MIN * 60))
#printf "${txtgrn}ELAPSED: "
#[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
#printf "%d sec(s)\n ${txtrst}" $E_SEC
#echo

#****************************************************************
## Clean buildtemporaire:
echo 'CLEANING TEMPORALY FILE'
cd ~/android/rom/buildtemporaire
rm -rf IyahmanRom10.1Extract
rm -rf gapps10.1s2Extract
rm -rf gapps10.1s2.zip
rm -rf bootanimationExtract
rm -rf bootanimation.zip
echo 'CLEANING TEMPORALY FILE DONE'

#****************************************************************
##Synchronization :
if echo 'SYNCHRONIZATION'
cd ~/android/rom/iyahmanrom10.1/
#curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo
#repo init -u git://github.com/CyanogenMod/android.git -b cm-10.1
#echo 'repo init -u git://github.com/CyanogenMod/android.git -b cm-10.1 done'
repo selfupdate
repo sync -j16
then echo 'REPO SYNC -j16 DONE'
else 
      if echo 'REPO SYNC -j16 FAILED, RETRY..'
      then repo sync
      echo 'REPO SYNC DONE'
      else echo 'REPO SYNC FAILED AGAIN'
      read
      fi
fi

#****************************************************************
##Save Gcc:
#cp -Ravu ~/android/rom/iyahmanrom10.1/prebuilts/gcc/linux-x86/arm/* ~/android/cyanogengcc

#****************************************************************
##Use Gcc Linaro 4.8: put linaro 4.8 on cyanogen prebuilts
#cd ~/android/linaro/gcc-linaro
#bunzip2 *.tar.bz2
#tar -xvf *.tar
#rm -r *.tar
#rm -r ~/android/rom/iyahmanrom10.1/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6/*
#rm -r ~/android/rom/iyahmanrom10.1/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/*
#cp -Rv ~/android/linaro/gcc-linaro/android-toolchain-eabi/* ~/android/rom/iyahmanrom10.1/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6
#cp -Rv ~/android/linaro/gcc-linaro/android-toolchain-eabi/* ~/android/rom/iyahmanrom10.1/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6
#rm -r ~/android/rom/iyahmanrom10.1/prebuilts/gcc/linux-x86/arm/*

#****************************************************************
## config compiler for cyanogen kernel :
#if echo 'USE CUSTOM TOOLCHAIN FOR CYANOGEN BUILD'
#then cd ~/android/rom/iyahmanrom10.1/kernel/samsung/aries
#make mrproper
#export ARCH=arm
#export CROSS_COMPILE=~/android/linaro/linaro-toolchains/bin/arm-cortex_a8-linux-gnueabi-
#make mrproper
#echo 'USE CUSTOM TOOLCHAIN FOR CYANOGEN KERNEL DONE'
#else read
#fi

#****************************************************************
## Report Timer :
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}ELAPSED: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC
echo

#****************************************************************
##Add Cherry Pick :
#echo

#****************************************************************
##Build CM10 :
if echo 'BUILD CM10.1 ROM'
cd ~/android/rom/iyahmanrom10.1/
then 
export USE_CCACHE=1 
. build/envsetup.sh && brunch i9100
echo 'BUILD CM10.1 ROM DONE'
else read
fi

#****************************************************************
## Report Timer :
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}ELAPSED: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC
echo

#****************************************************************
## Save Unofficial Nightly :
if echo 'SAVE UNOFFICIAL NIGHTLY'
then cd ~/android/rom/iyahmanrom10.1/out/target/product/i9100/
cp -v cm-IyahmanRom10.1.zip cm-10.1-`date -I`-UNOFFICIAL-i9100.zip
echo 'SAVE UNOFFICIAL NIGHTLY DONE'
else read
fi

#****************************************************************
## Move Rom And Extra Feature Into Temporaly Folder :
if echo 'MOVING ROM, GAPPS & BOOT ANIMATION INTO TEMPORALY FOLDER'
then cd ~/android/rom/iyahmanrom10.1/out/target/product/i9100/
mv -fv cm-IyahmanRom10.1.zip ~/android/rom/buildtemporaire
echo 'mv cm-IyahmanRom10.1.zip ~/android/rom/buildtemporaire done'
cd /home/iyahman/Bureau/
cp -rv gapps10.1s2.zip ~/android/rom/buildtemporaire
echo 'cp gapps10.1s2.zip ~/android/rom/buildtemporaire done'
cp -rv bootanimation.zip ~/android/rom/buildtemporaire
echo 'cp bootanimation.zip ~/android/rom/buildtemporaire done'
echo 'MOVING ROM, GAPPS & BOOT ANIMATION INTO TEMPORALY FOLDER DONE'
else read
fi

#****************************************************************
## unzip Rom And Extra Feature Into Respective Temporaly Folder :
if echo 'UNZIPPING ROM & GAPPS INTO TEMPORALY FOLDER'
then cd ~/android/rom/buildtemporaire/
unzip -q cm-IyahmanRom10.1 -d IyahmanRom10.1Extract
echo 'unzip -q cm-IyahmanRom10.1 -d IyahmanRom10.1Extract done'
unzip -q gapps10.1s2 -d gapps10.1s2Extract
echo 'unzip -q gapps10.1s2 -d gapps10.1s2Extract done'
unzip -q bootanimation -d bootanimationExtract
echo 'unzip -q bootanimation -d bootanimationExtract done'
echo 'UNZIPPING ROM & GAPPS INTO TEMPORALY FOLDER DONE'
else read
fi

#****************************************************************
## Copy Extra Feature Into Rom Temporaly Folder :
if echo 'COPYING GAPPS INTO TEMPORALY IYAHMANROM FOLDER'
then cd ~/android/rom/buildtemporaire/
cp -rv bootanimationExtract/system/media/bootanimation.zip IyahmanRom10.1Extract/system/media
echo 'cp -R bootanimationExtract/system/media/bootanimation.zip IyahmanRom10.1Extract/system/media done'
cp -rv gapps10.1s2Extract/* IyahmanRom10.1Extract
echo 'cp -R gapps10.1s2Extract/* IyahmanRom10.1Extract done'
echo 'COPYING GAPPS INTO TEMPORALY IYAHMANROM FOLDER DONE'
else read
fi

#****************************************************************
## Delete Unwanted Apk :
if echo 'DELETING UNWANTED APK'
then cd ~/android/rom/buildtemporaire/IyahmanRom10.1Extract/system/app/
#actualité et meteo
#rm -f GenieWidget.apk
#echo 'rm GenieWidget.apk done'
# clavier android
rm -f LatinImeDictionaryPack.apk
echo 'rm LatinImeDictionaryPack.apk done'
# dictionnaire clavier android
rm -f LatinIME.apk
echo 'rm LatinIME.apk done'
#apollo
rm -f Apollo.apk
echo 'rm Apollo.apk done'
#Lockclock
#rm -f LockClock.apk
#echo 'rm LockClock.apk done'
#black hole
rm -f Galaxy4.apk
echo 'rm Galaxy4.apk done'
#boite à outils SIM
rm -f Stk.apk
echo 'rm Stk.apk done'
#Bulles
rm -f NoiseField.apk
echo 'rm NoiseField.apk done'
#calculatrice
rm -f Calculator.apk
echo 'rm Calculator.apk done'
#cm updater
rm -f CMUpdater.apk
echo 'rm CMUpdater.apk done'
#Holospiral
rm -f HoloSpiralWallpaper.apk
echo 'rm HoloSpiralWallpaper.apk done'
#voicesearch
rm -f VoiceSearchStub.apk
echo 'rm VoiceSearchStub.apk done'
#dev tools
#rm -f Development.apk
#echo 'rm Development.apk done'
#dsp manager
rm -f DSPManager.apk
echo 'rm DSPManager.apk done'
#CM file manager
rm -f CMFileManager.apk
echo 'rm CMFileManager.apk done'
#face unlock
#rm -f FaceLock.apk
#echo 'rm FaceLock.apk done'
#livewallpaper
rm -f LiveWallpapers.apk
echo 'rm LiveWallpapers.apk done'
#CM wallpaper
rm -f CMWallpapers.apk
echo 'rm CMWallpapers.apk done'
#visualisation wallpaper
rm -f VisualizationWallpapers.apk
echo 'rm VisualizationWallpapers.apk done'
#magic smoke wallpaper
rm -f MagicSmokeWallpapers.apk
echo 'rm MagicSmokeWallpapers.apk done'
#gmail
rm -f Gmail2.apk
echo 'rm Gmail2.apk done'
#moteur synthese vocal
rm -f GoogleTTS.apk
echo 'rm GoogleTTS.apk done'
#movie studio
rm -f VideoEditor.apk
echo 'rm VideoEditor.apk done'
#navigateur
#rm -f Browser.apk
#echo 'rm Browser.apk done'
#quicksearhbox
rm -f QuickSearchBox.apk
echo 'rm QuickSearchBox.apk done'
#phase beam
rm -f PhaseBeam.apk
echo 'rm PhaseBeam.apk done'
#pico tts
rm -f PicoTts.apk
echo 'rm PicoTts.apk done'
#google ears
rm -f GoogleEars.apk
echo 'rm GoogleEars.apk done'
#reconnaissance vocal
rm -f VoiceDialer.apk
echo 'rm VoiceDialer.apk done'
#service exchange
rm -f Exchange2.apk
echo 'rm Exchange2.apk done'
#selecteur wallpaper animé
rm -f LiveWallpapersPicker.apk
echo 'rm LiveWallpapersPicker.apk done'
# talk
rm -f Talk.apk
echo 'rm Talk.apk done'
# talkback
rm -f Talkback.apk
echo 'rm Talkback.apk done'
# terminal emulator
rm -f Term.apk
echo 'rm term.apk done'
#trebuchet
rm -f Trebuchet.apk
echo 'rm Trebuchet.apk done'
# theme cm file manager
rm -f CMFileManagerThemes.apk
echo 'rm CMFileManagerThemes.apk done'
#vpn dialog
rm -f VpnDialogs.apk
echo 'rm VpnDialogs.apk done'
# ecran de veille interactif
rm -f BasicDreams.apk
echo 'rm BasicDreams.apk done'
# ecran de veille photo
rm -f PhotoTable.apk
echo 'rm PhotoTable.apk done'
# BackupRestoreConfirmation
#rm -f BackupRestoreConfirmation.apk
#echo 'rm BackupRestoreConfirmation.apk done'
# GoogleBackupTransport
#rm -f GoogleBackupTransport.apk
#echo 'rm GoogleBackupTransport.apk done'
# Media uploader
rm -f MediaUploader.apk
echo 'rm MediaUploader.apk done'
# CellBroadcastReceiver
rm -f CellBroadcastReceiver.apk
echo 'rm CellBroadcastReceiver.apk done'
# Gallery google
rm -f GalleryGoogle.apk
echo 'rm GalleryGoogle.apk done'
# Sms/Mms cm10
#rm -f Mms.apk
#echo 'rm Mms.apk done'
#GalleryLock
else read
fi
#****************************************************************
## Zip Rom In Temporaly Folder:
if echo 'ZIPPING IYAHMANROM'
then cd ~/android/rom/buildtemporaire/
rm -f cm-IyahmanRom10.1.zip
echo 'remove prebuilt cm-IyahmanRom10.1.zip done'
cd IyahmanRom10.1Extract
zip -qr ../cm-IyahmanRom10.1.zip ./
echo 'make full cm-IyahmanRom10.1.zip done'
echo 'ZIPPING IYAHMANROM DONE'
else read
fi

#****************************************************************
## Sign cm-IyahmanRom10.1 :
if echo 'SIGNING ZIP'
then cd ~/android/rom/buildtemporaire/
java -jar ~/android/rom/iyahmanrom10.1/out/host/linux-x86/framework/signapk.jar ~/android/rom/iyahmanrom10.1/build/target/product/security/testkey.x509.pem ~/android/rom/iyahmanrom10.1/build/target/product/security/testkey.pk8 cm-IyahmanRom10.1.zip cm-IyahmanRom10.1-signed.zip
echo 'SIGNING ZIP DONE'
else read
fi

#****************************************************************
## Zipalign cm-IyahmanRom10.1 :
if echo 'ZIPALIGNING'
then cd ~/android/sdk/tools/
zipalign -v 4 ~/android/rom/buildtemporaire/cm-IyahmanRom10.1-signed.zip
zipalign -c -v 4 ~/android/rom/buildtemporaire/cm-IyahmanRom10.1-signed.zip
echo 'ZIPALIGNING DONE'
else read
fi

#****************************************************************
## Move rom To Final Folder :
if echo 'MOVING IYAHMANROM INTO FINAL DIRECTORY'
then cd ~/android/rom/buildtemporaire/
mv -f cm-IyahmanRom10.1-signed.zip ~/android/rom/iyahmanrom10.1/out/target/product/i9100/
echo 'MOVING IYAHMANROM INTO FINAL DIRECTORY DONE'
else read
fi

#****************************************************************
## Rename Rom :
if echo 'RENAMING BUILD'
then cd ~/android/rom/iyahmanrom10.1/out/target/product/i9100/
mv -f cm-IyahmanRom10.1-signed.zip IyahmanRom10.1S2-`date -I`-signed.zip
echo 'RENAMING BUILD DONE'
else read
fi

#****************************************************************
## Clean buildtemporaire:
if echo 'CLEANING TEMPORALY FILE'
then cd ~/android/rom/buildtemporaire/
rm -rf IyahmanRom10.1Extract
rm -rf gapps10.1s2Extract
rm -rf gapps10.1s2.zip
rm -rf bootanimationExtract
rm -rf bootanimation.zip
rm -rf cm-IyahmanRom10.1.zip
cd ~/android/rom/iyahmanrom10.1/out/target/product/i9100/
rm -rf cm-IyahmanRom10.1.zip.md5sum
echo 'CLEANING TEMPORALY FILE DONE'
else read
fi
echo
echo
echo
echo 'BUILDING SUCCESSFULL'
echo
echo
echo

#****************************************************************
##Use Gcc cyanogen:
#if echo 'REINSTALL CYANOGEN GCC'
#rm -r ~/android/rom/iyahmanrom10.1/prebuilts/gcc/linux-x86/arm/*
#cp -Ravu ~/android/cyanogengcc/* ~/android/rom/iyahmanrom10.1/prebuilts/gcc/linux-x86/arm/
#then echo 'REINSTALL CYANOGEN GCC DONE'
#else read
#fi

#****************************************************************
## Report Timer :
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}ELAPSED: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC
echo

#****************************************************************
## Report TOTAL timer:
#DATE_END=$(date +"%s")
#echo
#DIFF=$(($DATE_END - $DATE_START))
#echo 'BUILD SEMAPHORE & CM10.1 FINI EN' "$(($DIFF / 60)) minute(s) and $(($DIFF % 60)) seconds."

#****************************************************************
## Open Final Build Directory:
nautilus ~/android/rom/iyahmanrom10.1/out/target/product/i9100/


#sudo bash -c "sleep 5m; pm-suspend"
#exit
