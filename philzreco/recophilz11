#!/bin/bash

#****************************************************************
## Start Timer :
START=$(date +%s)

export USE_CCACHE=1

case "$1" in
        s1)
            VARIANT="galaxysmtd"
            VER="s1"
            ;;

        s2)
            VARIANT="i9100"
            VER="s2"
            ;;
                       
        s4)
            VARIANT="jflte"
            VER="s4"
            ;;
            
esac

#****************************************************************
## Clean and copy recovery directory :
mkdir -p ~/android/rom/iyahmanrom11.0/bootable/recovery-philz
cp -ravu ~/android/philz_touch_cwm6/* ~/android/rom/iyahmanrom11.0/bootable/recovery-philz/
cd ~/android/rom/iyahmanrom11.0
. build/envsetup.sh && make clean 

#****************************************************************
## Config and compil recovery :
if [ "$VARIANT" = "galaxysmtd" ] ; then 
. build/envsetup.sh && lunch cm_galaxysmtd-user && mka -j3 recoveryimage RECOVERY_VARIANT=philz
elif [ "$VARIANT" = "i9100" ] ; then 
. build/envsetup.sh && lunch cm_i9100-user && mka -j3 recoveryimage RECOVERY_VARIANT=philz
elif [ "$VARIANT" = "jflte" ] ; then 
. build/envsetup.sh && lunch cm_jflte-user && mka -j3 recoveryimage RECOVERY_VARIANT=philz
fi

#****************************************************************
## Copy recovey binary to semaphore ramdidsk, rename build and commpil kernel :
# cp -ravu ~/android/rom/iyahmanrom11.0/out/target/product/galaxysmtd/recovery/root/sbin/recovery ~/android/kernel/semaphore/11.0/ics-ramdisk/jb_combo/ics_rec_init/sbin/ && echo recovery build et envoy√© dans icsramdisk
# 
# cd ~/android/kernel/semaphore/11.0/samsung-kernel-aries
# sed -i 's/"IyahmanKernel"/"IyahmanKernel-philz_touch_cwm6"/g' sbuild.sh
# semaphore
# cd ~/android/kernel/semaphore/11.0/samsung-kernel-aries
# sed -i 's/"IyahmanKernel-philz_touch_cwm6"/"IyahmanKernel"/g' sbuild.sh
# rm -rf ~/android/rom/iyahmanrom11.0/bootable/recovery

#****************************************************************
## Report Timer :
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}ELAPSED: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC