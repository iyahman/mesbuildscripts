#!/bin/bash

#****************************************************************
## Start Timer :
START=$(date +%s)

#****************************************************************
## Start Total Timer :
DATE_START=$(date +"%s")

#****************************************************************
## Set Basic Parameters :

#set -xv

case "$1" in
        s1)
            VARIANT="galaxysmtd"
            VER="s1"
            ;;

        s2)
            VARIANT="i9100"
            VER="s2"
            ;;
            
        s4)
            VARIANT="jflte"
            VER="s4"
            ;;
esac

function timer {
    END=$(date +%s)
    ELAPSED=$((END - START))
    E_MIN=$((ELAPSED / 60))
    E_SEC=$((ELAPSED - E_MIN * 60)) echo
    printf "${txtgrn}ELAPSED: "
    [ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
    printf "%d sec(s)\n ${txtrst}" $E_SEC && echo
}

#****************************************************************
## Script speech:
echo 'HELLO IYAHMAN'
echo {LAUNCH IYAHMANROM V4.0 FOR $VARIANT BUILD SCRIPT: CM11.0, CUSTOM COMPILER, GAPPS WITH CUSTOM APK,'HOST AND GPS CONF'}

#****************************************************************
## Variant selection verification:
if [ "$VARIANT" != "galaxysmtd" ] && [ "$VARIANT" != "i9100" ] && [ "$VARIANT" != "jflte" ] ; then echo '############################################################################################################################'
echo '###################################################### PAS DE VARIANTE SELECTIONNÃ‰E ######################################################' 
echo '############################################################################################################################' && read && exit
else echo
fi

#****************************************************************
## Open ccache and cpu monitor:
#cache
#gnome-system-monitor

#****************************************************************
##Use Gcc cyanogen:
# echo 'REINSTALL CYANOGEN GCC'
#if rm -r ~/android/rom/iyahmanrom11.0/prebuilts/gcc/linux-x86/arm/* &&
#cp -Ravu ~/android/cyanogengcc/* ~/android/rom/iyahmanrom11.0/prebuilts/gcc/linux-x86/arm/
#then echo 'REINSTALL CYANOGEN GCC DONE'
#else read
#fi

#****************************************************************
##Update android SDK:
#android list sdk
#android update sdk --no-ui

#****************************************************************
##Installclean : Wipe out the stuff that changes from one make target to another.
# echo 'INSTALLCLEAN'
if cd ~/android/rom/iyahmanrom11.0/ &&
make installclean ; then timer && echo 'INSTALLCLEAN DONE'
else timer && echo 'INSTALLCLEAN FAILED' && read
fi

#****************************************************************
##Make Clobber : deletes all the object files AND the intermediate dependency files generated which specify the dependencies of the cpp files.
#if echo 'MAKE CLOBBER' &&
#cd ~/android/rom/iyahmanrom11.0/ && make clobber ; then
#echo 'MAKE CLOBBER DONE' &&
#. build/envsetup.sh && breakfast $VARIANT &&
#adb root && sleep 3s &&
#cd ~/android/rom/iyahmanrom11.0/device/samsung/$VARIANT/ &&
#./extract-files.sh &&
#cp -rfv ~/android/extractedfiles/$VARIANT ~/android/rom/iyahmanrom11.0/device/samsung
#~/android/rom/iyahmanrom11.0/vendor/cm/get-prebuilts; else read
#fi
#cd ~/android/rom/iyahmanrom11.0/vendor/cm/config
#sed -i 's/$(PRODUCT_VERSION_MAJOR).$(PRODUCT_VERSION_MINOR)-$(shell date -u +%Y%m%d)-$(CM_BUILDTYPE)$(CM_EXTRAVERSION)-$(CM_BUILD)/IyahmanRom11.0/g' common.mk
#then echo 'REINSTALL AFTER CLOBBER DONE'

#****************************************************************
## Save extracted files :
#if adb root
#then mkdir ~/android/extractedfiles/$VARIANT
#cd ~/android/extractedfiles/$VARIANT/
#sleep 3s
#./extract-files.sh ; else read
#fi

#****************************************************************
##Remove Previous Kernel Build :
if [ "$VARIANT" = "galaxysmtd" ] ; then echo 'REMOVING PREVIOUS BUILD IN semaphore/output/'
cd ~/android/rom/semaphore/11.0/output/galaxys
cp -rv IyahmanKernels.zip IyahmanKernelsOld.zip
echo 'cp IyahmanKernels.zip IyahmanKernelsOld.zip done'
cp -rv IyahmanKernels.tar IyahmanKernelsOld.tar
echo 'cp IyahmanKernels.zip IyahmanKernelsOld.tar done'
rm -rf IyahmanKernels.zip
echo 'rm IyahmanKernels.zip done'
rm -rf IyahmanKernels.tar
echo 'rm IyahmanKernels.tar done'
echo 'REMOVING PREVIOUS BUILD IN semaphore/output/  DONE'
fi

#****************************************************************
## Clean buildtemporaire:
echo 'CLEANING TEMPORALY FILE'
cd ~/android/rom/buildtemporaire
rm -rf IyahmanRom11.0Extract
rm -rf gapps11.0Extract
rm -rf gapps11.0.zip
rm -rf bootanimationExtract
rm -rf bootanimation.zip
if [ "$VARIANT" = "galaxysmtd" ] ; then
rm -rf IyahmanKernelExtract
rm -rf IyahmanKernels.zip
rm -rf modemril.zip
rm -rf modemrilExtract
rm -rf patch720p4.4Extract
rm -rf patch720p4.4.zip
fi
echo 'CLEANING TEMPORALY FILE DONE'

#****************************************************************
##Synchronization, remove vendor sync and modify common.mk by IyahmanRom11.0 :
echo 'SYNCHRONIZATION'
if cd ~/android/rom/iyahmanrom11.0/ &&
#curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo
#chmod a+x ~/bin/repo
#repo init -u git://github.com/CyanogenMod/android.git -b cm-11.0
#echo 'repo init -u git://github.com/CyanogenMod/android.git -b cm-11.0 done'
repo selfupdate && repo sync -j16
then timer && echo 'REPO SYNC -j16 DONE'
else 
      if echo 'REPO SYNC -j16 FAILED, RETRY..' && read ; then 
      rm -rf ~/android/rom/iyahmanrom11.0/vendor/cm/config/common.mk &&
      repo sync -j16 && ~/android/rom/iyahmanrom11.0/vendor/cm/get-prebuilts &&
      cd ~/android/rom/iyahmanrom11.0/vendor/cm/config &&
      sed -i 's/$(PRODUCT_VERSION_MAJOR).$(PRODUCT_VERSION_MINOR)-$(shell date -u +%Y%m%d)-$(CM_BUILDTYPE)$(CM_EXTRAVERSION)-$(CM_BUILD)/IyahmanRom11.0/g' common.mk &&
      echo 'REPO SYNC DONE' 
      else echo 'REPO SYNC FAILED AGAIN' && timer && read
      fi
fi

#****************************************************************
##Save Gcc:
cp -Ravu ~/android/rom/iyahmanrom11.0/prebuilts/gcc/linux-x86/arm/* ~/android/cyanogengcc

#****************************************************************
##Use Gcc Linaro 4.8: put linaro 4.8 on cyanogen prebuilts
#cd ~/android/linaro/gcc-linaro
#bunzip2 *.tar.bz2
#tar -xvf *.tar
#rm -r *.tar
#rm -r ~/android/rom/iyahmanrom11.0/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6/*
#rm -r ~/android/rom/iyahmanrom11.0/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/*
#cp -Rv ~/android/linaro/gcc-linaro/android-toolchain-eabi/* ~/android/rom/iyahmanrom11.0/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6
#cp -Rv ~/android/linaro/gcc-linaro/android-toolchain-eabi/* ~/android/rom/iyahmanrom11.0/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6
#rm -r ~/android/rom/iyahmanrom11.0/prebuilts/gcc/linux-x86/arm/*

#****************************************************************
## config compiler for cyanogen kernel :
#if echo 'USE CUSTOM TOOLCHAIN FOR CYANOGEN KERNEL'  &&
#cd ~/android/rom/iyahmanrom11.0/kernel/samsung/aries &&
#make mrproper &&
#echo "CONFIG_S5P_HUGEMEM=y" >> .config &&
#export ARCH=arm &&
#export CROSS_COMPILE=~/android/linaro/linaro-toolchains/bin/arm-cortex_a8-linux-gnueabi- 
#then echo 'USE CUSTOM TOOLCHAIN FOR CYANOGEN KERNEL DONE'
#else read
#fi

#****************************************************************
##Add Cherry Pick :

#****************************************************************
##replace original system syze by Iyah 
#if [ "$VARIANT" = "galaxysmtd" ] ; then cd ~/android/rom/iyahmanrom11.0/device/samsung/aries-common
#sed -i 's/629145600/304087040/g' updater.sh ; fi

#****************************************************************
##Build CM10 :
if echo 'BUILD CM11.0 ROM' &&
cd ~/android/rom/iyahmanrom11.0/ &&
export USE_CCACHE=1 && . build/envsetup.sh && brunch $VARIANT ; then
timer && echo 'BUILD CM11.0 ROM DONE'
elif echo '############################################################################################################################' &&
echo '###################################################### DEBUGGING TIME ######################################################' &&
echo '############################################################################################################################' && read &&
make clean && export USE_CCACHE=1 && . build/envsetup.sh && brunch $VARIANT
then timer && echo 'BUILD CM11.0 ROM DONE'
elif rm -rf ~/android/rom/iyahmanrom11.0/out/target/product/$VARIANT &&
make clean && export USE_CCACHE=1 && . build/envsetup.sh && brunch $VARIANT
then timer && echo 'BUILD CM11.0 ROM DONE' ; else  echo timer  
echo '############################################################################################################################'
echo '###################################################### ROM INTERVENTION MANUEL REQUISE ######################################################' 
echo '############################################################################################################################' && read
fi

#****************************************************************
##Build Semaphore :
if [ "$VARIANT" = "galaxysmtd" ] && echo 'BUILD IYAHMANKERNEL' && 
cd /home/iyahman/android/rom/semaphore/11.0/samsung-kernel-aries/ &&
#cp -v /home/iyahman/android/rom/iyahmanrom11.0/out/target/product/$VARIANT/recovery/root/sbin/recovery /home/iyahman/android/rom/semaphore/ics-ramdisk/jb_combo/ics_rec_init/sbin/
export USE_CCACHE=1 && ./sbuild.sh galaxys s ; then timer && echo 'BUILD IYAHMANKERNEL DONE'
elif echo '############################################################################################################################'&&
echo '###################################################### DEBUGGING TIME ######################################################' &&
echo '############################################################################################################################' && read &&
make mrproper && export USE_CCACHE=1 && ./sbuild.sh galaxys s ; then timer && echo 'BUILD IYAHMANKERNEL DONE'
else echo '############################################################################################################################'
echo '###################################################### KERNEL INTERVENTION MANUEL REQUISE ######################################################' 
echo '############################################################################################################################' && read
fi

#****************************************************************
## Save Unofficial Nightly :
if echo 'SAVE UNOFFICIAL NIGHTLY' &&
cd ~/android/rom/iyahmanrom11.0/out/target/product/$VARIANT/ &&
cp -v cm-IyahmanRom11.0.zip cm-11.0-`date -I`-UNOFFICIAL-$VARIANT.zip
then echo 'SAVE UNOFFICIAL NIGHTLY DONE'
else read
fi

#****************************************************************
## Move Rom And Extra Feature Into Temporaly Folder :
echo 'MOVING ROM, GAPPS INTO TEMPORALY FOLDER'
cd ~/android/rom/iyahmanrom11.0/out/target/product/$VARIANT/
mv -fv cm-IyahmanRom11.0.zip ~/android/rom/buildtemporaire
echo 'mv cm-IyahmanRom11.0.zip ~/android/rom/buildtemporaire done'
cd /home/iyahman/Bureau/
cp -rv gapps11.0.zip ~/android/rom/buildtemporaire
echo 'cp gapps11.0.zip ~/android/rom/buildtemporaire done'
cd /home/iyahman/Bureau/
cp -rv bootanimation.zip ~/android/rom/buildtemporaire
echo 'cp bootanimation.zip ~/android/rom/buildtemporaire done'
if [ "$VARIANT" = "galaxysmtd" ] ; then
cd /home/iyahman/Bureau/
cp -rv patch720p4.4.zip ~/android/rom/buildtemporaire
echo 'cp patch720p4.4.zip ~/android/rom/buildtemporaire done'
cd /home/iyahman/android/rom/semaphore/11.0/output/galaxys
cp -rv IyahmanKernels.zip ~/android/rom/buildtemporaire
echo 'cp IyahmanKernels.zip ~/android/rom/buildtemporaire done'
cd /home/iyahman/Bureau/
cp -rv modemril.zip ~/android/rom/buildtemporaire
echo 'cp modemril.zip ~/android/rom/buildtemporaire done'
fi
echo 'MOVING ROM, GAPP INTO TEMPORALY FOLDER DONE'

#****************************************************************
## unzip Rom And Extra Feature Into Respective Temporaly Folder :
echo 'UNZIPPING ROM, GAPPS INTO TEMPORALY FOLDER'
cd ~/android/rom/buildtemporaire/
unzip -q cm-IyahmanRom11.0 -d IyahmanRom11.0Extract
echo 'unzip -q cm-IyahmanRom11.0 -d IyahmanRom11.0Extract done'
unzip -q gapps11.0 -d gapps11.0Extract
echo 'unzip -q gapps11.0 -d gapps11.0Extract done'
#unzip -q bootanimation -d bootanimationExtract
#echo 'unzip -q bootanimation -d bootanimationExtract done'
if [ "$VARIANT" = "galaxysmtd" ] ; then
unzip -q patch720p4.4 -d patch720p4.4Extract
echo 'unzip -q patch720p4.4 -d patch720p4.4Extract done'
unzip -q IyahmanKernels -d IyahmanKernelExtract
echo 'unzip -q IyahmanKernels -d IyahmanKernelExtract done'
unzip -q modemril -d modemrilExtract
echo 'unzip -q modemril -d modemrilExtract done'
fi
echo 'UNZIPPING ROM, GAPPS INTO TEMPORALY FOLDER DONE'

#****************************************************************
## Save cyanogenkernel in zip :
if [ "$VARIANT" = "galaxysmtd" ] ; then
cd ~/android/rom/buildtemporaire/IyahmanRom11.0Extract/ &&
cp boot.img ~/android/rom/ossaturekernel &&
cd ~/android/rom/ossaturekernel &&
zip -qr ../cyanogenkernel4.4.zip ./ &&
cd ~/android/rom &&
mv cyanogenkernel4.3.zip ~/android/rom/iyahmanrom11.0/out/target/product/$VARIANT/
else read
fi

#****************************************************************
## Copy Extra Feature Into Rom Temporaly Folder :
echo 'COPYING GAPPS PATCH720P ROMPHORE INTO TEMPORALY IYAHMANROM FOLDER'
cd ~/android/rom/buildtemporaire/
cp -rv gapps11.0Extract/* IyahmanRom11.0Extract
echo 'cp -R gapps11.0Extract/* IyahmanRom11.0Extract done'
#cp -rv bootanimationExtract/system/media/bootanimation.zip IyahmanRom11.0Extract/system/media
#echo 'cp -R bootanimationExtract/system/media/bootanimation.zip IyahmanRom11.0Extract/system/media done'
if [ "$VARIANT" = "galaxysmtd" ] ; then
cp -rv patch720p4.4Extract/system/* IyahmanRom11.0Extract/system
echo 'cp -R patch720p4.4Extract/system/* IyahmanRom11.0Extract/system done'
cp -rv IyahmanKernelExtract/boot.img IyahmanRom11.0Extract
echo 'cp -R IyahmanKernelExtract/boot.img IyahmanRom11.0Extract done'
cp -rv modemrilExtract/modemril/* IyahmanRom11.0Extract
echo 'cp -R modemrilExtract/* IyahmanRom11.0Extract done'
fi
echo 'COPYING GAPPS INTO TEMPORALY IYAHMANROM FOLDER DONE'

#****************************************************************
## Delete Unwanted Apk :
echo 'DELETING UNWANTED APK'
cd ~/android/rom/buildtemporaire/IyahmanRom11.0Extract/system/app/
if [ "$VARIANT" != "jflte" ] ; then
#dualboot apks
rm -f com.github.chenxiaolong.dualbootpatcher.apk
rm -f com.github.chenxiaolong.dualbootswitcher.apk
echo 'rm dualbootpatcher.apk done'
echo 'rm dualbootswitcher.apk done'
fi
if [ "$VARIANT" != "galaxysmtd" ] ; then
#semaphoremanager apk
rm -f com.semaphore.sm.apk
echo 'rm Semaphore manager.apk done'
#bln pro apk
rm -f neldar.bln.control.pro.apk
echo 'rm neldar.bln.control.pro.apk done'
#voodoo soud apk
rm -f org.projectvoodoo.controlapp.apk
echo 'rm org.projectvoodoo.controlapp done'
cd ~/android/rom/buildtemporaire/IyahmanRom11.0Extract/system/lib/
rm -f libvoodoo-sound.so
rm -f libvoodoo-daemon-tools.so
rm -f libvoodoo-kaudio.so
fi
cd ~/android/rom/buildtemporaire/IyahmanRom11.0Extract/system/app/
if [ "$VARIANT" = "galaxysmtd" ] ; then
#dsp manager
rm -f DSPManager.apk
echo 'rm DSPManager.apk done'
fi
# dictionnaire clavier android
rm -f LatinIME.apk
echo 'rm LatinIME.apk done'
#apollo
rm -f Apollo.apk
echo 'rm Apollo.apk done'
#Lockclock
#rm -f LockClock.apk
#echo 'rm LockClock.apk done'
#black hole
rm -f Galaxy4.apk
echo 'rm Galaxy4.apk done'
#boite Ã  outils SIM
rm -f Stk.apk
echo 'rm Stk.apk done'
#Bulles
rm -f NoiseField.apk
echo 'rm NoiseField.apk done'
#calculatrice
rm -f Calculator.apk
echo 'rm Calculator.apk done'
#Holospiral
rm -f HoloSpiralWallpaper.apk
echo 'rm HoloSpiralWallpaper.apk done'
#CM file manager
rm -f CMFileManager.apk
echo 'rm CMFileManager.apk done'
#face unlock
#rm -f FaceLock.apk
#echo 'rm FaceLock.apk done'
#livewallpaper
#rm -f LiveWallpapers.apk
#echo 'rm LiveWallpapers.apk done'
#CM wallpaper
#rm -f CMWallpapers.apk
#echo 'rm CMWallpapers.apk done'
#visualisation wallpaper
#rm -f VisualizationWallpapers.apk
#echo 'rm VisualizationWallpapers.apk done'
#magic smoke wallpaper
rm -f MagicSmokeWallpapers.apk
echo 'rm MagicSmokeWallpapers.apk done'
#movie studio
rm -f VideoEditor.apk
echo 'rm VideoEditor.apk done'
#navigateur
rm -f Browser.apk
echo 'rm Browser.apk done'
#quicksearhbox
rm -f QuickSearchBox.apk
echo 'rm QuickSearchBox.apk done'
#phase beam
rm -f PhaseBeam.apk
echo 'rm PhaseBeam.apk done'
#selecteur wallpaper animÃ©
#rm -f LiveWallpapersPicker.apk
#echo 'rm LiveWallpapersPicker.apk done'
# terminal emulator
#rm -f Term.apk
#echo 'rm term.apk done'
# ecran de veille interactif
#rm -f BasicDreams.apk
#echo 'rm BasicDreams.apk done'
# ecran de veille photo
#rm -f PhotoTable.apk
#echo 'rm PhotoTable.apk done'
# CellBroadcastReceiver
#rm -f CellBroadcastReceiver.apk
#echo 'rm CellBroadcastReceiver.apk done'
# Gallery cm11
rm -f Gallery2.apk
echo 'rm Gallery2.apk done'
# camera cm11
rm -f Camera2.apk
echo 'rm Camera2.apk done'
cd ~/android/rom/buildtemporaire/IyahmanRom11.0Extract/system/priv-app/
#cm updater
rm -f CMUpdater.apk
echo 'rm CMUpdater.apk done'
#pico tts
rm -f PicoTts.apk
echo 'rm PicoTts.apk done'
#reconnaissance vocal
rm -f VoiceDialer.apk
echo 'rm VoiceDialer.apk done'
#trebuchet
rm -f Trebuchet.apk
echo 'rm Trebuchet.apk done'
echo 'DELETING UNWANTED APK DONE'
cd ~/android/rom/buildtemporaire/IyahmanRom11.0Extract/system/tts/
rm -rf lang_pico

#****************************************************************
## Zip Rom In Temporaly Folder:
if echo 'ZIPPING IYAHMANROM' && 
cd ~/android/rom/buildtemporaire/ &&
rm -f cm-IyahmanRom11.0.zip&&
echo 'remove prebuilt cm-IyahmanRom11.0.zip done' ; then
cd IyahmanRom11.0Extract &&
zip -qr ../cm-IyahmanRom11.0.zip ./ &&
echo 'make full cm-IyahmanRom11.0.zip done' &&
echo 'ZIPPING IYAHMANROM DONE'
fi

#****************************************************************
## Sign cm-IyahmanRom11.0 :
if echo 'SIGNING ZIP' &&
cd ~/android/rom/buildtemporaire/ &&
# a virer?? java -jar ~/android/rom/iyahmanrom11.0/out/host/linux-x86/framework/signapk.jar ~/android/rom/iyahmanrom11.0/build/target/product/security/testkey.x509.pem ~/android/rom/iyahmanrom11.0/build/target/product/security/testkey.pk8 cm-IyahmanRom11.0.zip cm-IyahmanRom11.0-signed.zip
openssl pkcs8 -in build/target/product/security/testkey.pk8 -inform DER -nocrypt &&
java -Xmx2048m -jar /home/iyahman/android/rom/iyahmanrom11.0/out/host/linux-x86/framework/signapk.jar -w ~/android/rom/iyahmanrom11.0/build/target/product/security/testkey.x509.pem ~/android/rom/iyahmanrom11.0/build/target/product/security/testkey.pk8 cm-IyahmanRom11.0.zip cm-IyahmanRom11.0-signed.zip
then timer && echo 'SIGNING ZIP DONE' ; else read
fi

#****************************************************************
## Zipalign cm-IyahmanRom11.0 :
if echo 'ZIPALIGNING' &&
cd ~/android/sdk/tools/ &&
zipalign -v 4 ~/android/rom/buildtemporaire/cm-IyahmanRom11.0-signed.zip
then timer && echo 'ZIPALIGNING DONE' ; else read
fi

#****************************************************************
## Move rom To Final Folder :
if echo 'MOVING IYAHMANROM INTO FINAL DIRECTORY' &&
cd ~/android/rom/buildtemporaire/ &&
mv -f cm-IyahmanRom11.0-signed.zip ~/android/rom/iyahmanrom11.0/out/target/product/$VARIANT/
then echo 'MOVING IYAHMANROM INTO FINAL DIRECTORY DONE' ; else read
fi

#****************************************************************
## Rename Rom :
if echo 'RENAMING BUILD' &&
cd ~/android/rom/iyahmanrom11.0/out/target/product/$VARIANT/ &&
mv -f cm-IyahmanRom11.0-signed.zip IyahmanRom11.0$VER-`date -I`-signed.zip
then echo 'RENAMING BUILD DONE'; else read 
fi

#****************************************************************
## Dual Boot :
if [ "$VARIANT" = "jflte" ] ; then cd ~/android/rom/iyahmanrom11.0/out/target/product/jflte/ &&
cp -f IyahmanRom11.0$VER-`date -I`-signed.zip cm-11-`date -u +%Y%m%d`-NIGHTLY-jflte.zip &&
cd ~/android/DualBootPatcher &&
./patch-file.sh /home/iyahman/android/rom/iyahmanrom11.0/out/target/product/$VARIANT/cm-11-`date -u +%Y%m%d`-NIGHTLY-jflte.zip &&
cd ~/android/rom/iyahmanrom11.0/out/target/product/$VARIANT/ &&
mv -f cm-11-`date -u +%Y%m%d`-NIGHTLY-jflte_dualboot.zip IyahmanRom11.0$VER-`date -I`"-signed_dualboot".zip &&
rm -f cm-11-`date -u +%Y%m%d`-NIGHTLY-jflte.zip ; timer
else read
fi

#****************************************************************
## Clean buildtemporaire:
echo 'CLEANING TEMPORALY FILE'
cd ~/android/rom/buildtemporaire/
rm -rf IyahmanRom11.0Extract
rm -rf cm-IyahmanRom11.0.zip
rm -rf gapps11.0Extract
rm -rf gapps11.0.zip
rm -rf bootanimationExtract
rm -rf bootanimation.zip
cd ~/android/rom/iyahmanrom11.0/out/target/product/$VARIANT/
rm -rf cm-IyahmanRom11.0.zip.md5sum
if [ "$VARIANT" = "galaxysmtd" ] ; then
rm -rf patch720p4.4Extract
rm -rf patch720p4.4.zip
rm -rf IyahmanKernelExtract
rm -rf IyahmanKernels.zip
rm -rf modemril.zip
rm -rf modemrilExtract
cd ~/android/rom/semaphore/11.0/output/galaxys
rm -rf IyahmanKernelsOld.zip
rm -rf IyahmanKernelsOld.tar
fi
echo 'CLEANING TEMPORALY FILE DONE' 
echo '############################################################################################################################'
echo '###################################################### BUILD TERMINÃ‰ ######################################################' 
echo '############################################################################################################################'

#****************************************************************
## Report TOTAL timer:
DATE_END=$(date +"%s")
echo
DIFF=$(($DATE_END - $DATE_START))
echo {CM11.0 POUR $VARIANT FINI EN} "$(($DIFF / 60)) minute(s) and $(($DIFF % 60)) seconds."

#****************************************************************
## Open Final Build Directory:
nautilus ~/android/rom/iyahmanrom11.0/out/target/product/$VARIANT/

sudo bash -c "sleep 5m; pm-suspend-hybrid"
#exit
